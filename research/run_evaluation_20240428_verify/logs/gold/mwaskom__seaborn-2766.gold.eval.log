[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Task Metadata:
	- Instance ID: mwaskom__seaborn-2766
	- Testbed: /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11
	- Virtual Env.: mwaskom__seaborn__0.11
	- Evaluation Model: gold 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git ls-files --ignored --exclude-standard -o -z | xargs -0 -r rm -rf 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore . 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git reset HEAD . 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git clean -fdx 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git -c advice.detachedHead=false checkout e8a83c8f12c50eb99bcf32ff83b36bc413ec2e02 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
HEAD is now at e8a83c8f Update custom css
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Reset task environment to e8a83c8f12c50eb99bcf32ff83b36bc413ec2e02 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git apply -v /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/temp_mwaskom__seaborn-2766_pred_try.patch 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": false, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
Checking patch seaborn/_core.py...
Checking patch seaborn/_statistics.py...
Checking patch seaborn/axisgrid.py...
Checking patch seaborn/categorical.py...
Checking patch seaborn/external/version.py...
Checking patch seaborn/rcmod.py...
Applied patch seaborn/_core.py cleanly.
Applied patch seaborn/_statistics.py cleanly.
Applied patch seaborn/axisgrid.py cleanly.
Applied patch seaborn/categorical.py cleanly.
Applied patch seaborn/external/version.py cleanly.
Applied patch seaborn/rcmod.py cleanly.
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Apply patch successful (pred_try) 
>>>>> Applied Patch (pred_try)
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git apply -v -R /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/temp_mwaskom__seaborn-2766_pred_try.patch 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": false, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
Checking patch seaborn/rcmod.py...
Checking patch seaborn/external/version.py...
Checking patch seaborn/categorical.py...
Checking patch seaborn/axisgrid.py...
Checking patch seaborn/_statistics.py...
Checking patch seaborn/_core.py...
Applied patch seaborn/rcmod.py cleanly.
Applied patch seaborn/external/version.py cleanly.
Applied patch seaborn/categorical.py cleanly.
Applied patch seaborn/axisgrid.py cleanly.
Applied patch seaborn/_statistics.py cleanly.
Applied patch seaborn/_core.py cleanly.
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Revert patch successful (pred_try) 
>>>>> Applied Patch (pred_try)
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Running installation command: . /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/bin/activate mwaskom__seaborn__0.11 && echo 'activate successful' && pip install -e . 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: . /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/bin/activate mwaskom__seaborn__0.11 && echo 'activate successful' && pip install -e . 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": true, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2, "timeout": 900} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
activate successful
Obtaining file:///home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: numpy>=1.15 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from seaborn==0.11.2) (1.25.2)
Requirement already satisfied: scipy>=1.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from seaborn==0.11.2) (1.11.2)
Requirement already satisfied: pandas>=0.23 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from seaborn==0.11.2) (2.1.0)
Requirement already satisfied: matplotlib>=2.2 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from seaborn==0.11.2) (3.7.2)
Requirement already satisfied: contourpy>=1.0.1 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (1.1.0)
Requirement already satisfied: cycler>=0.10 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (0.11.0)
Requirement already satisfied: fonttools>=4.22.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (4.42.1)
Requirement already satisfied: kiwisolver>=1.0.1 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (1.4.5)
Requirement already satisfied: packaging>=20.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (23.1)
Requirement already satisfied: pillow>=6.2.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (10.0.0)
Requirement already satisfied: pyparsing<3.1,>=2.3.1 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (3.0.9)
Requirement already satisfied: python-dateutil>=2.7 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (2.8.2)
Requirement already satisfied: importlib-resources>=3.2.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from matplotlib>=2.2->seaborn==0.11.2) (6.0.1)
Requirement already satisfied: pytz>=2020.1 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from pandas>=0.23->seaborn==0.11.2) (2023.3.post1)
Requirement already satisfied: tzdata>=2022.1 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from pandas>=0.23->seaborn==0.11.2) (2023.1)
Requirement already satisfied: zipp>=3.1.0 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from importlib-resources>=3.2.0->matplotlib>=2.2->seaborn==0.11.2) (3.16.2)
Requirement already satisfied: six>=1.5 in /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/lib/python3.9/site-packages (from python-dateutil>=2.7->matplotlib>=2.2->seaborn==0.11.2) (1.16.0)
Installing collected packages: seaborn
  Running setup.py develop for seaborn
Successfully installed seaborn-0.11.2
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Installation successful 

>>>>> Init Succeeded
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git apply -v /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/temp_mwaskom__seaborn-2766_pred.patch 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": false, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
Checking patch seaborn/_core.py...
Checking patch seaborn/_statistics.py...
Checking patch seaborn/axisgrid.py...
Checking patch seaborn/categorical.py...
Checking patch seaborn/external/version.py...
Checking patch seaborn/rcmod.py...
Applied patch seaborn/_core.py cleanly.
Applied patch seaborn/_statistics.py cleanly.
Applied patch seaborn/axisgrid.py cleanly.
Applied patch seaborn/categorical.py cleanly.
Applied patch seaborn/external/version.py cleanly.
Applied patch seaborn/rcmod.py cleanly.
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Apply patch successful (pred) 
>>>>> Applied Patch (pred)
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_algorithms.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_categorical.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_distributions.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_rcmod.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_regression.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git restore seaborn/tests/test_utils.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": true, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: git apply -v /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/temp_mwaskom__seaborn-2766_test.patch 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": false, "shell": false, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
Checking patch seaborn/tests/test_algorithms.py...
Checking patch seaborn/tests/test_categorical.py...
Checking patch seaborn/tests/test_distributions.py...
Checking patch seaborn/tests/test_rcmod.py...
Checking patch seaborn/tests/test_regression.py...
Checking patch seaborn/tests/test_utils.py...
Applied patch seaborn/tests/test_algorithms.py cleanly.
Applied patch seaborn/tests/test_categorical.py cleanly.
Applied patch seaborn/tests/test_distributions.py cleanly.
Applied patch seaborn/tests/test_rcmod.py cleanly.
Applied patch seaborn/tests/test_regression.py cleanly.
Applied patch seaborn/tests/test_utils.py cleanly.
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 0 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Apply patch successful (test) 
>>>>> Applied Patch (test)
Test Script: . /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/bin/activate mwaskom__seaborn__0.11 && echo 'activate successful' && pytest --no-header -rA seaborn/tests/test_algorithms.py seaborn/tests/test_categorical.py seaborn/tests/test_distributions.py seaborn/tests/test_rcmod.py seaborn/tests/test_regression.py seaborn/tests/test_utils.py;
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Command: . /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/bin/activate mwaskom__seaborn__0.11 && echo 'activate successful' && pytest --no-header -rA seaborn/tests/test_algorithms.py seaborn/tests/test_categorical.py seaborn/tests/test_distributions.py seaborn/tests/test_rcmod.py seaborn/tests/test_regression.py seaborn/tests/test_utils.py 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Subprocess args: {"check": false, "shell": true, "capture_output": false, "text": true, "env": {"CONDA_PKGS_DIRS": "/home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmp7_slr5hs/miniconda3/cache"}, "stdout": -1, "stderr": -2, "timeout": 900} 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Std. Output:
activate successful
============================= test session starts ==============================
collected 532 items

seaborn/tests/test_algorithms.py ............ssssss                      [  3%]
seaborn/tests/test_categorical.py F.........F........................... [ 10%]
........................................................................ [ 24%]
.FFFFFFFFFFFF.FFFFFF..FFFFFFFFFFFFF                                      [ 30%]
seaborn/tests/test_distributions.py FFFFFFEFF.EEEEEFEEEFFFEF.FFFFFFFFFFF [ 37%]
FFFFFEFFF.FFFFFFFFFFFFFFE.FFFFFFFFFFFFFF..FFEF.FFFFFFFFFFFFFFFFFEEEEFFEE [ 50%]
FFFFEFEFFFF.FEEEFFFFFFEFEEFFEEEEEEEFFFFFEEEEEFFFFFFFFFFFFFFFFFFFFEEEEEEE [ 64%]
EF.FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF..FFF              [ 75%]
seaborn/tests/test_rcmod.py ....................s.s                      [ 79%]
seaborn/tests/test_regression.py ................ss.ss.........ssss..... [ 87%]
..............s..                                                        [ 90%]
seaborn/tests/test_utils.py ...............................F.F.......... [ 98%]
.......                                                                  [100%]

==================================== ERRORS ====================================
_____________ ERROR at setup of TestRugPlot.test_wide_vs_long_data _____________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def wide_df(rng):
    
        columns = list("abc")
>       index = pd.Int64Index(np.arange(10, 50, 2), name="wide_index")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:67: AttributeError
_______________ ERROR at setup of TestRugPlot.test_a_deprecation _______________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
____________ ERROR at setup of TestRugPlot.test_axis_deprecation[x] ____________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
____________ ERROR at setup of TestRugPlot.test_axis_deprecation[y] ____________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestRugPlot.test_vertical_deprecation ____________

rng = RandomState(MT19937) at 0x7F60B308F140

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_________________ ERROR at setup of TestRugPlot.test_rug_data __________________

rng = RandomState(MT19937) at 0x7F60B308F240

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
______________ ERROR at setup of TestRugPlot.test_expand_margins _______________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____________ ERROR at setup of TestRugPlot.test_matplotlib_kwargs _____________

rng = RandomState(MT19937) at 0x7F60B3187E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________________ ERROR at setup of TestRugPlot.test_axis_labels ________________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestKDEPlotUnivariate.test_wide_vs_long_data ________

rng = RandomState(MT19937) at 0x7F60B3187E40

    @pytest.fixture
    def wide_df(rng):
    
        columns = list("abc")
>       index = pd.Int64Index(np.arange(10, 50, 2), name="wide_index")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:67: AttributeError
_____ ERROR at setup of TestKDEPlotUnivariate.test_color_cycle_interaction _____

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
____________ ERROR at setup of TestKDEPlotUnivariate.test_line_kws _____________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_______ ERROR at setup of TestHistPlotUnivariate.test_wide_vs_long_data ________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def wide_df(rng):
    
        columns = list("abc")
>       index = pd.Int64Index(np.arange(10, 50, 2), name="wide_index")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:67: AttributeError
______ ERROR at setup of TestHistPlotUnivariate.test_multiple_input_check ______

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
______ ERROR at setup of TestHistPlotUnivariate.test_element_input_check _______

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_count_stat ___________

rng = RandomState(MT19937) at 0x7F60B2BF2040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_density_stat __________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_ ERROR at setup of TestHistPlotUnivariate.test_probability_stat[probability] __

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__ ERROR at setup of TestHistPlotUnivariate.test_probability_stat[proportion] __

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_percent_stat __________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_unique_bins ___________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def wide_df(rng):
    
        columns = list("abc")
>       index = pd.Int64Index(np.arange(10, 50, 2), name="wide_index")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:67: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_kde[count] ___________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_kde[density] __________

rng = RandomState(MT19937) at 0x7F60B27FA040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestHistPlotUnivariate.test_kde[probability] ________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestHistPlotUnivariate.test_kde_default_cut _________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_kde_yaxis ____________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_kde_line_kws __________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_bars_no_fill __________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_step_fill ____________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_poly_fill ____________

rng = RandomState(MT19937) at 0x7F60B24CF040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_poly_no_fill __________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_step_no_fill __________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestHistPlotUnivariate.test_step_fill_xy __________

rng = RandomState(MT19937) at 0x7F60B24CF440

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestHistPlotUnivariate.test_step_no_fill_xy _________

rng = RandomState(MT19937) at 0x7F60B24CF140

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
______ ERROR at setup of TestHistPlotUnivariate.test_auto_linewidth[True] ______

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____ ERROR at setup of TestHistPlotUnivariate.test_auto_linewidth[False] ______

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
___________ ERROR at setup of TestHistPlotUnivariate.test_bar_kwargs ___________

rng = RandomState(MT19937) at 0x7F60B27F9040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestHistPlotUnivariate.test_step_fill_kwargs ________

rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
________ ERROR at setup of TestHistPlotUnivariate.test_step_line_kwargs ________

rng = RandomState(MT19937) at 0x7F60B2AD7D40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestECDFPlotUnivariate.test_drawstyle[x] __________

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
__________ ERROR at setup of TestECDFPlotUnivariate.test_drawstyle[y] __________

rng = RandomState(MT19937) at 0x7F60B25C9040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____ ERROR at setup of TestECDFPlotUnivariate.test_proportion_limits[x-y] _____

rng = RandomState(MT19937) at 0x7F60B25C9240

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____ ERROR at setup of TestECDFPlotUnivariate.test_proportion_limits[y-x] _____

rng = RandomState(MT19937) at 0x7F60B25C9340

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_ ERROR at setup of TestECDFPlotUnivariate.test_proportion_limits_complementary[x-y] _

rng = RandomState(MT19937) at 0x7F60B2AD7E40

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_ ERROR at setup of TestECDFPlotUnivariate.test_proportion_limits_complementary[y-x] _

rng = RandomState(MT19937) at 0x7F60B25C9040

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____ ERROR at setup of TestECDFPlotUnivariate.test_proportion_count[x-y] ______

rng = RandomState(MT19937) at 0x7F60B25C9440

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
_____ ERROR at setup of TestECDFPlotUnivariate.test_proportion_count[y-x] ______

rng = RandomState(MT19937) at 0x7F60B25C9140

    @pytest.fixture
    def flat_series(rng):
    
>       index = pd.Int64Index(np.arange(10, 30), name="t")
E       AttributeError: module 'pandas' has no attribute 'Int64Index'

seaborn/conftest.py:83: AttributeError
=================================== FAILURES ===================================
___________________ TestCategoricalPlotter.test_wide_df_data ___________________

self = <seaborn.tests.test_categorical.TestCategoricalPlotter object at 0x7f60b3289220>

    def test_wide_df_data(self):
    
        p = cat._CategoricalPlotter()
    
        # Test basic wide DataFrame
>       p.establish_variables(data=self.x_df)

seaborn/tests/test_categorical.py:47: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:81: in establish_variables
    iter_data = plot_data.iteritems()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = big         X         Y         Z
0   -1.264053  1.527905 -0.970711
1    0.470560 -0.100697  0.303793
2   -1.725962  1....927305  0.550757
17   0.954356  0.782777 -1.793238
18   1.241855  1.707747  0.323153
19  -0.991834 -1.163282 -0.021335
name = 'iteritems'

    @final
    def __getattr__(self, name: str):
        """
        After regular attribute access, try looking up the name
        This allows simpler access to columns for interactive use.
        """
        # Note: obj.x will always call obj.__getattribute__('x') prior to
        # calling obj.__getattr__('x').
        if (
            name not in self._internal_names_set
            and name not in self._metadata
            and name not in self._accessors
            and self._info_axis._can_hold_identifiers_and_holds_name(name)
        ):
            return self[name]
>       return object.__getattribute__(self, name)
E       AttributeError: 'DataFrame' object has no attribute 'iteritems'

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/core/generic.py:6202: AttributeError
______________________ TestCategoricalPlotter.test_order _______________________

self = <seaborn.tests.test_categorical.TestCategoricalPlotter object at 0x7f60b3420d30>

    def test_order(self):
    
        p = cat._CategoricalPlotter()
    
        # Test inferred order from a wide dataframe input
>       p.establish_variables(data=self.x_df)

seaborn/tests/test_categorical.py:279: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:81: in establish_variables
    iter_data = plot_data.iteritems()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = big         X         Y         Z
0   -1.264053  1.527905 -0.970711
1    0.470560 -0.100697  0.303793
2   -1.725962  1....927305  0.550757
17   0.954356  0.782777 -1.793238
18   1.241855  1.707747  0.323153
19  -0.991834 -1.163282 -0.021335
name = 'iteritems'

    @final
    def __getattr__(self, name: str):
        """
        After regular attribute access, try looking up the name
        This allows simpler access to columns for interactive use.
        """
        # Note: obj.x will always call obj.__getattribute__('x') prior to
        # calling obj.__getattr__('x').
        if (
            name not in self._internal_names_set
            and name not in self._metadata
            and name not in self._accessors
            and self._info_axis._can_hold_identifiers_and_holds_name(name)
        ):
            return self[name]
>       return object.__getattribute__(self, name)
E       AttributeError: 'DataFrame' object has no attribute 'iteritems'

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/core/generic.py:6202: AttributeError
__________________________ TestCatPlot.test_share_xy ___________________________

self = <seaborn.tests.test_categorical.TestCatPlot object at 0x7f60b31e53d0>

    def test_share_xy(self):
    
        # Test default behavior works
        g = cat.catplot(x="g", y="y", col="g", data=self.df, sharex=True)
        for ax in g.axes.flat:
            assert len(ax.collections) == len(self.df.g.unique())
    
        g = cat.catplot(x="y", y="g", col="g", data=self.df, sharey=True)
        for ax in g.axes.flat:
            assert len(ax.collections) == len(self.df.g.unique())
    
        # Test unsharing works
        with pytest.warns(UserWarning):
            g = cat.catplot(x="g", y="y", col="g", data=self.df, sharex=False)
            for ax in g.axes.flat:
                assert len(ax.collections) == 1
    
        with pytest.warns(UserWarning):
            g = cat.catplot(x="y", y="g", col="g", data=self.df, sharey=False)
            for ax in g.axes.flat:
                assert len(ax.collections) == 1
    
        # Make sure no warning is raised if color is provided on unshared plot
>       with pytest.warns(None) as record:

seaborn/tests/test_categorical.py:2629: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = WarningsChecker(record=True), expected_warning = None, match_expr = None

    def __init__(
        self,
        expected_warning: Union[Type[Warning], Tuple[Type[Warning], ...]] = Warning,
        match_expr: Optional[Union[str, Pattern[str]]] = None,
        *,
        _ispytest: bool = False,
    ) -> None:
        check_ispytest(_ispytest)
        super().__init__(_ispytest=True)
    
        msg = "exceptions must be derived from Warning, not %s"
        if isinstance(expected_warning, tuple):
            for exc in expected_warning:
                if not issubclass(exc, Warning):
                    raise TypeError(msg % type(exc))
            expected_warning_tup = expected_warning
        elif isinstance(expected_warning, type) and issubclass(
            expected_warning, Warning
        ):
            expected_warning_tup = (expected_warning,)
        else:
>           raise TypeError(msg % type(expected_warning))
E           TypeError: exceptions must be derived from Warning, not <class 'NoneType'>

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/_pytest/recwarn.py:281: TypeError
____________________ TestBoxenPlotter.test_box_ends_finite _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e5520>

    def test_box_ends_finite(self):
    
        p = cat._LVPlotter(**self.default_kws)
        p.establish_variables("g", "y", data=self.df)
        box_ends = []
        k_vals = []
        for s in p.plot_data:
>           b, k = p._lv_box_ends(s)

seaborn/tests/test_categorical.py:2683: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestBoxenPlotter.test_box_ends_correct_tukey _________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e52b0>

    def test_box_ends_correct_tukey(self):
    
        n = 100
        linear_data = np.arange(n)
        expected_k = max(int(np.log2(n)) - 3, 1)
        expected_edges = [self.edge_calc(i, linear_data)
                          for i in range(expected_k + 1, 1, -1)]
    
        p = cat._LVPlotter(**self.default_kws)
>       calc_edges, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2712: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestBoxenPlotter.test_box_ends_correct_proportion _______________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353a550>

    def test_box_ends_correct_proportion(self):
    
        n = 100
        linear_data = np.arange(n)
        expected_k = int(np.log2(n)) - int(np.log2(n * 0.007)) + 1
        expected_edges = [self.edge_calc(i, linear_data)
                          for i in range(expected_k + 1, 1, -1)]
    
        kws = self.default_kws.copy()
        kws["k_depth"] = "proportion"
        p = cat._LVPlotter(**kws)
>       calc_edges, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2728: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[491-6] ___________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e5e20>
n = 491, exp_k = 6

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[492-7] ___________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e58e0>
n = 492, exp_k = 7

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[983-7] ___________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e5a90>
n = 983, exp_k = 7

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[984-8] ___________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e5a00>
n = 984, exp_k = 8

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[1966-8] __________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31e5f10>
n = 1966, exp_k = 8

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestBoxenPlotter.test_box_ends_correct_trustworthy[1967-9] __________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b35738e0>
n = 1967, exp_k = 9

    @pytest.mark.parametrize(
        "n,exp_k",
        [(491, 6), (492, 7), (983, 7), (984, 8), (1966, 8), (1967, 9)],
    )
    def test_box_ends_correct_trustworthy(self, n, exp_k):
    
        linear_data = np.arange(n)
        kws = self.default_kws.copy()
        kws["k_depth"] = "trustworthy"
        p = cat._LVPlotter(**kws)
>       _, calc_k = p._lv_box_ends(linear_data)

seaborn/tests/test_categorical.py:2743: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ TestBoxenPlotter.test_outliers ________________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b3573c40>

    def test_outliers(self):
    
        n = 100
        outlier_data = np.append(np.arange(n - 1), 2 * n)
        expected_k = max(int(np.log2(n)) - 3, 1)
        expected_edges = [self.edge_calc(i, outlier_data)
                          for i in range(expected_k + 1, 1, -1)]
    
        p = cat._LVPlotter(**self.default_kws)
>       calc_edges, calc_k = p._lv_box_ends(outlier_data)

seaborn/tests/test_categorical.py:2756: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestBoxenPlotter.test_showfliers _______________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b31b83a0>

    def test_showfliers(self):
    
>       ax = cat.boxenplot(x="g", y="y", data=self.df, k_depth="proportion",
                           showfliers=True)

seaborn/tests/test_categorical.py:2768: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[1] _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353aa60>
power = 1

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[3] _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353a9d0>
power = 3

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[7] _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353a7c0>
power = 7

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[11] ____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353afd0>
power = 11

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[13] ____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353afa0>
power = 13

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_valid_depths[17] ____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353ad90>
power = 17

    @pytest.mark.parametrize("power", [1, 3, 7, 11, 13, 17])
    def test_valid_depths(self, power):
    
        x = np.random.standard_t(10, 2 ** power)
    
        valid_depths = ["proportion", "tukey", "trustworthy", "full"]
        kws = self.default_kws.copy()
    
        for depth in valid_depths + [4]:
            kws["k_depth"] = depth
>           box_ends, k = cat._LVPlotter(**kws)._lv_box_ends(x)

seaborn/tests/test_categorical.py:2817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestBoxenPlotter.test_axes_data ________________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d6640>

    def test_axes_data(self):
    
>       ax = cat.boxenplot(x="g", y="y", data=self.df)

seaborn/tests/test_categorical.py:2853: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestBoxenPlotter.test_box_colors _______________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d64f0>

    def test_box_colors(self):
    
>       ax = cat.boxenplot(x="g", y="y", data=self.df, saturation=1)

seaborn/tests/test_categorical.py:2867: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestBoxenPlotter.test_draw_missing_boxes ___________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d60a0>

    def test_draw_missing_boxes(self):
    
>       ax = cat.boxenplot(x="g", y="y", data=self.df,
                           order=["a", "b", "c", "d"])

seaborn/tests/test_categorical.py:2883: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_unaligned_index _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d6310>

    def test_unaligned_index(self):
    
        f, (ax1, ax2) = plt.subplots(2)
>       cat.boxenplot(x=self.g, y=self.y, ax=ax1)

seaborn/tests/test_categorical.py:2893: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestBoxenPlotter.test_missing_data ______________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d6e50>

    def test_missing_data(self):
    
        x = ["a", "a", "b", "b", "c", "c", "d", "d"]
        h = ["x", "y", "x", "y", "x", "y", "x", "y"]
        y = self.rs.randn(8)
        y[-2:] = np.nan
    
>       ax = cat.boxenplot(x=x, y=y)

seaborn/tests/test_categorical.py:2914: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestBoxenPlotter.test_boxenplots _______________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34318e0>

    def test_boxenplots(self):
    
        # Smoke test the high level boxenplot options
    
>       cat.boxenplot(x="y", data=self.df)

seaborn/tests/test_categorical.py:2929: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestBoxenPlotter.test_axes_annotation _____________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b3431b80>

    def test_axes_annotation(self):
    
>       ax = cat.boxenplot(x="g", y="y", data=self.df)

seaborn/tests/test_categorical.py:2973: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestBoxenPlotter.test_legend_titlesize[large] _________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d6550>
size = 'large'

    @pytest.mark.parametrize("size", ["large", "medium", "small", 22, 12])
    def test_legend_titlesize(self, size):
    
        if Version(mpl.__version__) >= Version("3.0"):
            rc_ctx = {"legend.title_fontsize": size}
        else:  # Old matplotlib doesn't have legend.title_fontsize rcparam
            rc_ctx = {"axes.labelsize": size}
            if isinstance(size, int):
                size = size * .85
        exp = mpl.font_manager.FontProperties(size=size).get_size()
    
        with plt.rc_context(rc=rc_ctx):
>           ax = cat.boxenplot(x="g", y="y", hue="h", data=self.df)

seaborn/tests/test_categorical.py:3016: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2053: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestBoxenPlotter.test_legend_titlesize[medium] ________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b34d6eb0>
size = 'medium'

    @pytest.mark.parametrize("size", ["large", "medium", "small", 22, 12])
    def test_legend_titlesize(self, size):
    
        if Version(mpl.__version__) >= Version("3.0"):
            rc_ctx = {"legend.title_fontsize": size}
        else:  # Old matplotlib doesn't have legend.title_fontsize rcparam
            rc_ctx = {"axes.labelsize": size}
            if isinstance(size, int):
                size = size * .85
        exp = mpl.font_manager.FontProperties(size=size).get_size()
    
        with plt.rc_context(rc=rc_ctx):
>           ax = cat.boxenplot(x="g", y="y", hue="h", data=self.df)

seaborn/tests/test_categorical.py:3016: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2053: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestBoxenPlotter.test_legend_titlesize[small] _________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b353aee0>
size = 'small'

    @pytest.mark.parametrize("size", ["large", "medium", "small", 22, 12])
    def test_legend_titlesize(self, size):
    
        if Version(mpl.__version__) >= Version("3.0"):
            rc_ctx = {"legend.title_fontsize": size}
        else:  # Old matplotlib doesn't have legend.title_fontsize rcparam
            rc_ctx = {"axes.labelsize": size}
            if isinstance(size, int):
                size = size * .85
        exp = mpl.font_manager.FontProperties(size=size).get_size()
    
        with plt.rc_context(rc=rc_ctx):
>           ax = cat.boxenplot(x="g", y="y", hue="h", data=self.df)

seaborn/tests/test_categorical.py:3016: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2053: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestBoxenPlotter.test_legend_titlesize[22] __________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b356dd60>
size = 22

    @pytest.mark.parametrize("size", ["large", "medium", "small", 22, 12])
    def test_legend_titlesize(self, size):
    
        if Version(mpl.__version__) >= Version("3.0"):
            rc_ctx = {"legend.title_fontsize": size}
        else:  # Old matplotlib doesn't have legend.title_fontsize rcparam
            rc_ctx = {"axes.labelsize": size}
            if isinstance(size, int):
                size = size * .85
        exp = mpl.font_manager.FontProperties(size=size).get_size()
    
        with plt.rc_context(rc=rc_ctx):
>           ax = cat.boxenplot(x="g", y="y", hue="h", data=self.df)

seaborn/tests/test_categorical.py:3016: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2053: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestBoxenPlotter.test_legend_titlesize[12] __________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b3573970>
size = 12

    @pytest.mark.parametrize("size", ["large", "medium", "small", 22, 12])
    def test_legend_titlesize(self, size):
    
        if Version(mpl.__version__) >= Version("3.0"):
            rc_ctx = {"legend.title_fontsize": size}
        else:  # Old matplotlib doesn't have legend.title_fontsize rcparam
            rc_ctx = {"axes.labelsize": size}
            if isinstance(size, int):
                size = size * .85
        exp = mpl.font_manager.FontProperties(size=size).get_size()
    
        with plt.rc_context(rc=rc_ctx):
>           ax = cat.boxenplot(x="g", y="y", hue="h", data=self.df)

seaborn/tests/test_categorical.py:3016: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2053: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestBoxenPlotter.test_Float64_input ______________________

self = <seaborn.tests.test_categorical.TestBoxenPlotter object at 0x7f60b35604c0>

    @pytest.mark.skipif(
        Version(pd.__version__) < Version("1.2"),
        reason="Test requires pandas>=1.2")
    def test_Float64_input(self):
        data = pd.DataFrame(
            {"x": np.random.choice(["a", "b"], 20), "y": np.random.random(20)}
        )
        data['y'] = data['y'].astype(pd.Float64Dtype())
>       _ = cat.boxenplot(x="x", y="y", data=data)

seaborn/tests/test_categorical.py:3030: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/categorical.py:2642: in boxenplot
    plotter.plot(ax, kwargs)
seaborn/categorical.py:2065: in plot
    self.draw_letter_value_plot(ax, boxplot_kws)
seaborn/categorical.py:2024: in draw_letter_value_plot
    self._lvplot(box_data,
seaborn/categorical.py:1918: in _lvplot
    box_ends, k = self._lv_box_ends(box_data)
seaborn/categorical.py:1847: in _lv_box_ends
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestDistPlot.test_hist_bins __________________________

self = <seaborn.tests.test_distributions.TestDistPlot object at 0x7f60b2341a30>

    def test_hist_bins(self):
    
        fd_edges = np.histogram_bin_edges(self.x, "fd")
        with pytest.warns(FutureWarning):
>           ax = distplot(self.x)

seaborn/tests/test_distributions.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2687: in distplot
    kdeplot(a, vertical=vertical, ax=ax, color=kde_color, **kde_kws)
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________________ TestDistPlot.test_elements __________________________

self = <seaborn.tests.test_distributions.TestDistPlot object at 0x7f60b2341130>

    def test_elements(self):
    
        with pytest.warns(FutureWarning):
    
            n = 10
            ax = distplot(self.x, bins=n,
                          hist=True, kde=False, rug=False, fit=None)
            assert len(ax.patches) == 10
            assert len(ax.lines) == 0
            assert len(ax.collections) == 0
    
            plt.close(ax.figure)
>           ax = distplot(self.x,
                          hist=False, kde=True, rug=False, fit=None)

seaborn/tests/test_distributions.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2687: in distplot
    kdeplot(a, vertical=vertical, ax=ax, color=kde_color, **kde_kws)
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestDistPlot.test_distplot_with_nans _____________________

self = <seaborn.tests.test_distributions.TestDistPlot object at 0x7f60b2341370>

    def test_distplot_with_nans(self):
    
        f, (ax1, ax2) = plt.subplots(2)
        x_null = np.append(self.x, [np.nan])
    
        with pytest.warns(FutureWarning):
>           distplot(self.x, ax=ax1)

seaborn/tests/test_distributions.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2687: in distplot
    kdeplot(a, vertical=vertical, ax=ax, color=kde_color, **kde_kws)
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ TestRugPlot.test_long_data[x] _________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b2341910>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'x'

    @pytest.mark.parametrize("variable", ["x", "y"])
    def test_long_data(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           rugplot(data=long_df, **{variable: vector})

seaborn/tests/test_distributions.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ TestRugPlot.test_long_data[y] _________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b2341850>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'y'

    @pytest.mark.parametrize("variable", ["x", "y"])
    def test_long_data(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           rugplot(data=long_df, **{variable: vector})

seaborn/tests/test_distributions.py:151: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestRugPlot.test_bivariate_data ________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b2341ac0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_bivariate_data(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       rugplot(data=long_df, x="x", y="y", ax=ax1)

seaborn/tests/test_distributions.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestRugPlot.test_flat_vector _________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b34c74f0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_flat_vector(self, long_df):
    
        f, ax = plt.subplots()
>       rugplot(data=long_df["x"])

seaborn/tests/test_distributions.py:186: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ TestRugPlot.test_datetime_data ________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b23418b0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_datetime_data(self, long_df):
    
>       ax = rugplot(data=long_df["t"])

seaborn/tests/test_distributions.py:192: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestRugPlot.test_rug_colors __________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b22d3a30>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_rug_colors(self, long_df):
    
>       ax = rugplot(data=long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:245: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________________ TestRugPlot.test_log_scale __________________________

self = <seaborn.tests.test_distributions.TestRugPlot object at 0x7f60b22f0d90>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_log_scale(self, long_df):
    
        ax1, ax2 = plt.figure().subplots(2)
    
        ax2.set_xscale("log")
    
>       rugplot(data=long_df, x="z", ax=ax1)

seaborn/tests/test_distributions.py:294: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:2127: in rugplot
    p.plot_rug(height, expand_margins, legend, **kwargs)
seaborn/distributions.py:1328: in plot_rug
    for sub_vars, sub_data, in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotUnivariate.test_long_vectors[x] __________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22f0b50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'x'

    @pytest.mark.parametrize(
        "variable", ["x", "y"],
    )
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           kdeplot(data=long_df, **{variable: vector})

seaborn/tests/test_distributions.py:317: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotUnivariate.test_long_vectors[y] __________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22f0490>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'y'

    @pytest.mark.parametrize(
        "variable", ["x", "y"],
    )
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           kdeplot(data=long_df, **{variable: vector})

seaborn/tests/test_distributions.py:317: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_flat_vector ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22f0730>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_flat_vector(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df["x"])

seaborn/tests/test_distributions.py:340: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestKDEPlotUnivariate.test_singular_data ___________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2337ac0>

    def test_singular_data(self):
    
        with pytest.warns(UserWarning):
>           ax = kdeplot(x=np.ones(10))

seaborn/tests/test_distributions.py:352: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError

During handling of the above exception, another exception occurred:

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2337ac0>

    def test_singular_data(self):
    
        with pytest.warns(UserWarning):
>           ax = kdeplot(x=np.ones(10))
E           Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E            Emitted warnings: [ FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead')].

seaborn/tests/test_distributions.py:352: Failed
________________ TestKDEPlotUnivariate.test_variable_assignment ________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22f0790>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_variable_assignment(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x", fill=True)

seaborn/tests/test_distributions.py:366: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestKDEPlotUnivariate.test_vertical_deprecation ________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22d3040>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_vertical_deprecation(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, y="x")

seaborn/tests/test_distributions.py:377: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotUnivariate.test_bw_deprecation ___________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22d3be0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_bw_deprecation(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x", bw_method="silverman")

seaborn/tests/test_distributions.py:387: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_kernel_deprecation _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2341280>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_kernel_deprecation(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x")

seaborn/tests/test_distributions.py:397: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestKDEPlotUnivariate.test_shade_deprecation _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2337e50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_shade_deprecation(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x", shade=True)

seaborn/tests/test_distributions.py:407: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestKDEPlotUnivariate.test_hue_colors[layer] _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339340>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'layer'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_hue_colors(self, long_df, multiple):
    
>       ax = kdeplot(
            data=long_df, x="x", hue="a",
            multiple=multiple,
            fill=True, legend=False
        )

seaborn/tests/test_distributions.py:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestKDEPlotUnivariate.test_hue_colors[stack] _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b23392e0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_hue_colors(self, long_df, multiple):
    
>       ax = kdeplot(
            data=long_df, x="x", hue="a",
            multiple=multiple,
            fill=True, legend=False
        )

seaborn/tests/test_distributions.py:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestKDEPlotUnivariate.test_hue_colors[fill] __________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339100>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_hue_colors(self, long_df, multiple):
    
>       ax = kdeplot(
            data=long_df, x="x", hue="a",
            multiple=multiple,
            fill=True, legend=False
        )

seaborn/tests/test_distributions.py:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestKDEPlotUnivariate.test_hue_stacking ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339430>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_stacking(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(
            data=long_df, x="x", hue="a",
            multiple="layer", common_grid=True,
            legend=False, ax=ax1,
        )

seaborn/tests/test_distributions.py:437: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_hue_filling ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339910>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_filling(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(
            data=long_df, x="x", hue="a",
            multiple="layer", common_grid=True,
            legend=False, ax=ax1,
        )

seaborn/tests/test_distributions.py:461: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_fill_default[stack] ________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339e50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack'

    @pytest.mark.parametrize("multiple", ["stack", "fill"])
    def test_fill_default(self, long_df, multiple):
    
>       ax = kdeplot(
            data=long_df, x="x", hue="a", multiple=multiple, fill=None
        )

seaborn/tests/test_distributions.py:483: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_fill_default[fill] _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339eb0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill'

    @pytest.mark.parametrize("multiple", ["stack", "fill"])
    def test_fill_default(self, long_df, multiple):
    
>       ax = kdeplot(
            data=long_df, x="x", hue="a", multiple=multiple, fill=None
        )

seaborn/tests/test_distributions.py:483: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestKDEPlotUnivariate.test_fill_nondefault[layer] _______________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233af10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'layer'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_fill_nondefault(self, long_df, multiple):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
        kws = dict(data=long_df, x="x", hue="a")
>       kdeplot(**kws, multiple=multiple, fill=False, ax=ax1)

seaborn/tests/test_distributions.py:495: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestKDEPlotUnivariate.test_fill_nondefault[stack] _______________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233ac10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_fill_nondefault(self, long_df, multiple):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
        kws = dict(data=long_df, x="x", hue="a")
>       kdeplot(**kws, multiple=multiple, fill=False, ax=ax1)

seaborn/tests/test_distributions.py:495: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestKDEPlotUnivariate.test_fill_nondefault[fill] _______________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233ab50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill'

    @pytest.mark.parametrize("multiple", ["layer", "stack", "fill"])
    def test_fill_nondefault(self, long_df, multiple):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
        kws = dict(data=long_df, x="x", hue="a")
>       kdeplot(**kws, multiple=multiple, fill=False, ax=ax1)

seaborn/tests/test_distributions.py:495: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_color[True] ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233a8b0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
fill = True

    @pytest.mark.parametrize("fill", [True, False])
    def test_color(self, long_df, fill):
    
        color = (.2, 1, .6)
        alpha = .5
    
        f, ax = plt.subplots()
    
>       kdeplot(long_df["x"], fill=fill, color=color)

seaborn/tests/test_distributions.py:541: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestKDEPlotUnivariate.test_color[False] ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233a4f0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
fill = False

    @pytest.mark.parametrize("fill", [True, False])
    def test_color(self, long_df, fill):
    
        color = (.2, 1, .6)
        alpha = .5
    
        f, ax = plt.subplots()
    
>       kdeplot(long_df["x"], fill=fill, color=color)

seaborn/tests/test_distributions.py:541: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotUnivariate.test_datetime_scale ___________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233a1c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    @pytest.mark.skipif(
        Version(np.__version__) < Version("1.17"),
        reason="Histogram over datetime64 requires numpy >= 1.17",
    )
    def test_datetime_scale(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
>       kdeplot(x=long_df["t"], fill=True, ax=ax1)

seaborn/tests/test_distributions.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ TestKDEPlotUnivariate.test_cut ________________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233b520>
rng = RandomState(MT19937) at 0x7F60B2AD7940

    def test_cut(self, rng):
    
        x = rng.normal(0, 3, 1000)
    
        f, ax = plt.subplots()
>       kdeplot(x=x, cut=0, legend=False)

seaborn/tests/test_distributions.py:577: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestKDEPlotUnivariate.test_clip ________________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2339d60>
rng = RandomState(MT19937) at 0x7F60B2AD7D40

    def test_clip(self, rng):
    
        x = rng.normal(0, 3, 1000)
    
        clip = -1, 1
>       ax = kdeplot(x=x, clip=clip)

seaborn/tests/test_distributions.py:596: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotUnivariate.test_line_is_density __________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b2337fa0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_line_is_density(self, long_df):
    
>       ax = kdeplot(data=long_df, x="x", cut=5)

seaborn/tests/test_distributions.py:605: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_cumulative _____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b22f0d60>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_cumulative(self, long_df):
    
>       ax = kdeplot(data=long_df, x="x", cut=5, cumulative=True)

seaborn/tests/test_distributions.py:611: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_common_norm ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233ba90>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_common_norm(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(
            data=long_df, x="x", hue="c", common_norm=True, cut=10, ax=ax1
        )

seaborn/tests/test_distributions.py:620: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_common_grid ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233b370>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_common_grid(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
        order = "a", "b", "c"
    
>       kdeplot(
            data=long_df, x="x", hue="a", hue_order=order,
            common_grid=False, cut=0, ax=ax1,
        )

seaborn/tests/test_distributions.py:643: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestKDEPlotUnivariate.test_bw_method _____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233b340>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_bw_method(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x", bw_method=0.2, legend=False)

seaborn/tests/test_distributions.py:665: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestKDEPlotUnivariate.test_bw_adjust _____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233bc40>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_bw_adjust(self, long_df):
    
        f, ax = plt.subplots()
>       kdeplot(data=long_df, x="x", bw_adjust=0.2, legend=False)

seaborn/tests/test_distributions.py:684: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_log_scale_implicit _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233b3d0>
rng = RandomState(MT19937) at 0x7F60B2AD7E40

    def test_log_scale_implicit(self, rng):
    
        x = rng.lognormal(0, 1, 100)
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
        ax1.set_xscale("log")
    
>       kdeplot(x=x, ax=ax1)

seaborn/tests/test_distributions.py:707: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_log_scale_explicit _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233d220>
rng = RandomState(MT19937) at 0x7F60B2AD7940

    def test_log_scale_explicit(self, rng):
    
        x = rng.lognormal(0, 1, 100)
    
        f, (ax1, ax2, ax3) = plt.subplots(ncols=3)
    
        ax1.set_xscale("log")
>       kdeplot(x=x, ax=ax1)

seaborn/tests/test_distributions.py:727: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotUnivariate.test_log_scale_with_hue _________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233d430>
rng = RandomState(MT19937) at 0x7F60B2AD7E40

    def test_log_scale_with_hue(self, rng):
    
        data = rng.lognormal(0, 1, 50), rng.lognormal(0, 2, 100)
>       ax = kdeplot(data=data, log_scale=True, common_grid=True)

seaborn/tests/test_distributions.py:749: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestKDEPlotUnivariate.test_log_scale_normalization ______________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233d640>
rng = RandomState(MT19937) at 0x7F60B2AD7D40

    def test_log_scale_normalization(self, rng):
    
        x = rng.lognormal(0, 1, 100)
>       ax = kdeplot(x=x, log_scale=True, cut=10)

seaborn/tests/test_distributions.py:755: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestKDEPlotUnivariate.test_weights ______________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233d970>

    @pytest.mark.skipif(
        Version(scipy.__version__) < Version("1.2.0"),
        reason="Weights require scipy >= 1.2.0"
    )
    def test_weights(self):
    
        x = [1, 2]
        weights = [2, 1]
    
>       ax = kdeplot(x=x, weights=weights)

seaborn/tests/test_distributions.py:769: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestKDEPlotUnivariate.test_sticky_edges ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233daf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_sticky_edges(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(data=long_df, x="x", fill=True, ax=ax1)

seaborn/tests/test_distributions.py:782: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotUnivariate.test_axis_labels ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233e460>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_axis_labels(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(data=long_df, x="x", ax=ax1)

seaborn/tests/test_distributions.py:809: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestKDEPlotUnivariate.test_legend _______________________

self = <seaborn.tests.test_distributions.TestKDEPlotUnivariate object at 0x7f60b233e7c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_legend(self, long_df):
    
>       ax = kdeplot(data=long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:819: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotBivariate.test_long_vectors ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b233ec10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_long_vectors(self, long_df):
    
>       ax1 = kdeplot(data=long_df, x="x", y="y")

seaborn/tests/test_distributions.py:847: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestKDEPlotBivariate.test_singular_data ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340430>

    def test_singular_data(self):
    
        with pytest.warns(UserWarning):
>           ax = dist.kdeplot(x=np.ones(10), y=np.arange(10))

seaborn/tests/test_distributions.py:865: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError

During handling of the above exception, another exception occurred:

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340430>

    def test_singular_data(self):
    
        with pytest.warns(UserWarning):
>           ax = dist.kdeplot(x=np.ones(10), y=np.arange(10))
E           Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E            Emitted warnings: [ FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead'),
E             FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead')].

seaborn/tests/test_distributions.py:865: Failed
____________________ TestKDEPlotBivariate.test_fill_artists ____________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b233e430>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_fill_artists(self, long_df):
    
        for fill in [True, False]:
            f, ax = plt.subplots()
>           kdeplot(data=long_df, x="x", y="y", hue="c", fill=fill)

seaborn/tests/test_distributions.py:880: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestKDEPlotBivariate.test_common_norm _____________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b233d9d0>
rng = RandomState(MT19937) at 0x7F60B2AD7940

    def test_common_norm(self, rng):
    
        hue = np.repeat(["a", "a", "a", "b"], 40)
        x, y = rng.multivariate_normal([0, 0], [(.2, .5), (.5, 2)], len(hue)).T
        x[hue == "a"] -= 2
        x[hue == "b"] += 2
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
>       kdeplot(x=x, y=y, hue=hue, common_norm=True, ax=ax1)

seaborn/tests/test_distributions.py:895: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestKDEPlotBivariate.test_log_scale ______________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b22f0040>
rng = RandomState(MT19937) at 0x7F60B2AD7D40

    def test_log_scale(self, rng):
    
        x = rng.lognormal(0, 1, 100)
        y = rng.uniform(0, 1, 100)
    
        levels = .2, .5, 1
    
        f, ax = plt.subplots()
>       kdeplot(x=x, y=y, log_scale=True, levels=levels, ax=ax)

seaborn/tests/test_distributions.py:910: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestKDEPlotBivariate.test_bandwidth ______________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b233a220>
rng = RandomState(MT19937) at 0x7F60B2AD7E40

    def test_bandwidth(self, rng):
    
        n = 100
        x, y = rng.multivariate_normal([0, 0], [(.2, .5), (.5, 2)], n).T
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
>       kdeplot(x=x, y=y, ax=ax1)

seaborn/tests/test_distributions.py:935: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestKDEPlotBivariate.test_weights _______________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b233b280>
rng = RandomState(MT19937) at 0x7F60B2AD7940

    @pytest.mark.skipif(
        Version(scipy.__version__) < Version("1.2.0"),
        reason="Weights require scipy >= 1.2.0"
    )
    def test_weights(self, rng):
    
        import warnings
        warnings.simplefilter("error", np.VisibleDeprecationWarning)
    
        n = 100
        x, y = rng.multivariate_normal([1, 3], [(.2, .5), (.5, 2)], n).T
        hue = np.repeat([0, 1], n // 2)
        weights = rng.uniform(0, 1, n)
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
>       kdeplot(x=x, y=y, hue=hue, ax=ax1)

seaborn/tests/test_distributions.py:960: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestKDEPlotBivariate.test_hue_ignores_cmap __________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340040>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_ignores_cmap(self, long_df):
    
        with pytest.warns(UserWarning, match="cmap parameter ignored"):
>           ax = kdeplot(data=long_df, x="x", y="y", hue="c", cmap="viridis")

seaborn/tests/test_distributions.py:972: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError

During handling of the above exception, another exception occurred:

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340040>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_ignores_cmap(self, long_df):
    
        with pytest.warns(UserWarning, match="cmap parameter ignored"):
>           ax = kdeplot(data=long_df, x="x", y="y", hue="c", cmap="viridis")
E           Failed: DID NOT WARN. No warnings of type (<class 'UserWarning'>,) were emitted.
E            Emitted warnings: [ FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead'),
E             FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead'),
E             FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead'),
E             FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead'),
E             FutureWarning('is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead')].

seaborn/tests/test_distributions.py:972: Failed
________________ TestKDEPlotBivariate.test_contour_line_colors _________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340370>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_contour_line_colors(self, long_df):
    
        color = (.2, .9, .8, 1)
>       ax = kdeplot(data=long_df, x="x", y="y", color=color)

seaborn/tests/test_distributions.py:979: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestKDEPlotBivariate.test_contour_fill_colors _________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b23406d0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_contour_fill_colors(self, long_df):
    
        n = 6
        color = (.2, .9, .8, 1)
>       ax = kdeplot(
            data=long_df, x="x", y="y", fill=True, color=color, levels=n,
        )

seaborn/tests/test_distributions.py:988: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestKDEPlotBivariate.test_colorbar ______________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340b80>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_colorbar(self, long_df):
    
>       ax = kdeplot(data=long_df, x="x", y="y", fill=True, cbar=True)

seaborn/tests/test_distributions.py:1000: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestKDEPlotBivariate.test_levels_and_thresh __________________

self = <seaborn.tests.test_distributions.TestKDEPlotBivariate object at 0x7f60b2340c10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_levels_and_thresh(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(ncols=2)
    
        n = 8
        thresh = .1
        plot_kws = dict(data=long_df, x="x", y="y")
>       kdeplot(**plot_kws, levels=n, thresh=thresh, ax=ax1)

seaborn/tests/test_distributions.py:1010: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotUnivariate.test_long_vectors[x] __________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b233f9d0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'x'

    @pytest.mark.parametrize(
        "variable", ["x", "y"],
    )
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, axs = plt.subplots(3)
        for vector, ax in zip(vectors, axs):
>           histplot(data=long_df, ax=ax, **{variable: vector})

seaborn/tests/test_distributions.py:1059: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotUnivariate.test_long_vectors[y] __________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b233faf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'y'

    @pytest.mark.parametrize(
        "variable", ["x", "y"],
    )
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, axs = plt.subplots(3)
        for vector, ax in zip(vectors, axs):
>           histplot(data=long_df, ax=ax, **{variable: vector})

seaborn/tests/test_distributions.py:1059: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestHistPlotUnivariate.test_flat_vector ____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b233f550>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_flat_vector(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
>       histplot(data=long_df["x"], ax=ax1)

seaborn/tests/test_distributions.py:1084: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestHistPlotUnivariate.test_variable_assignment ________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b22acb50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_variable_assignment(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
>       histplot(data=long_df, x="x", ax=ax1)

seaborn/tests/test_distributions.py:1100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[layer-bars] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311ebb0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'layer', element = 'bars'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[layer-step] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311ea30>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'layer', element = 'step'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[layer-poly] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311ec40>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'layer', element = 'poly'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[dodge-bars] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311e7f0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'dodge', element = 'bars'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[dodge-step] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311efd0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'dodge', element = 'step'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[dodge-poly] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311eaf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'dodge', element = 'poly'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[stack-bars] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b311eca0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack', element = 'bars'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[stack-step] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128280>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack', element = 'step'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_hue_fill_colors[stack-poly] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128160>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack', element = 'poly'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotUnivariate.test_hue_fill_colors[fill-bars] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128520>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill', element = 'bars'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotUnivariate.test_hue_fill_colors[fill-step] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128d00>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill', element = 'step'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotUnivariate.test_hue_fill_colors[fill-poly] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b31281c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill', element = 'poly'

    @pytest.mark.parametrize("element", ["bars", "step", "poly"])
    @pytest.mark.parametrize("multiple", ["layer", "dodge", "stack", "fill"])
    def test_hue_fill_colors(self, long_df, multiple, element):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            multiple=multiple, bins=1,
            fill=True, element=element, legend=False,
        )

seaborn/tests/test_distributions.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestHistPlotUnivariate.test_hue_stack _____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128fa0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_stack(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
        n = 10
    
        kws = dict(data=long_df, x="x", hue="a", bins=n, element="bars")
    
>       histplot(**kws, multiple="layer", ax=ax1)

seaborn/tests/test_distributions.py:1140: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestHistPlotUnivariate.test_hue_fill _____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b31283d0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_fill(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
        n = 10
    
        kws = dict(data=long_df, x="x", hue="a", bins=n, element="bars")
    
>       histplot(**kws, multiple="layer", ax=ax1)

seaborn/tests/test_distributions.py:1161: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestHistPlotUnivariate.test_hue_dodge _____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b3128a30>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_dodge(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
        bw = 2
    
        kws = dict(data=long_df, x="x", hue="c", binwidth=bw, element="bars")
    
>       histplot(**kws, multiple="layer", ax=ax1)

seaborn/tests/test_distributions.py:1184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestHistPlotUnivariate.test_hue_as_numpy_dodged ________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b312f130>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_as_numpy_dodged(self, long_df):
        # https://github.com/mwaskom/seaborn/issues/2452
    
>       ax = histplot(
            long_df,
            x="y", hue=np.asarray(long_df["a"]),
            multiple="dodge", bins=1,
        )

seaborn/tests/test_distributions.py:1199: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________ TestHistPlotUnivariate.test_density_stat_common_norm _____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b312ff10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_density_stat_common_norm(self, long_df):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat="density", common_norm=True, element="bars",
        )

seaborn/tests/test_distributions.py:1232: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________ TestHistPlotUnivariate.test_density_stat_unique_norm _____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b312f7c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_density_stat_unique_norm(self, long_df):
    
        n = 10
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat="density", bins=n, common_norm=False, element="bars",
        )

seaborn/tests/test_distributions.py:1243: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____ TestHistPlotUnivariate.test_probability_stat_common_norm[probability] _____

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b313c5e0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
height_norm_arg = 'probability'

    def test_probability_stat_common_norm(self, long_df, height_norm_arg):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat=height_norm_arg, common_norm=True, element="bars",
        )

seaborn/tests/test_distributions.py:1268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____ TestHistPlotUnivariate.test_probability_stat_common_norm[proportion] _____

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b313c460>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
height_norm_arg = 'proportion'

    def test_probability_stat_common_norm(self, long_df, height_norm_arg):
    
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat=height_norm_arg, common_norm=True, element="bars",
        )

seaborn/tests/test_distributions.py:1268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____ TestHistPlotUnivariate.test_probability_stat_unique_norm[probability] _____

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b313c9d0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
height_norm_arg = 'probability'

    def test_probability_stat_unique_norm(self, long_df, height_norm_arg):
    
        n = 10
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat=height_norm_arg, bins=n, common_norm=False, element="bars",
        )

seaborn/tests/test_distributions.py:1278: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____ TestHistPlotUnivariate.test_probability_stat_unique_norm[proportion] _____

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b313caf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
height_norm_arg = 'proportion'

    def test_probability_stat_unique_norm(self, long_df, height_norm_arg):
    
        n = 10
>       ax = histplot(
            data=long_df, x="x", hue="a",
            stat=height_norm_arg, bins=n, common_norm=False, element="bars",
        )

seaborn/tests/test_distributions.py:1278: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestHistPlotUnivariate.test_common_bins ____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314e220>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_common_bins(self, long_df):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="a", common_bins=True, bins=n, element="bars",
        )

seaborn/tests/test_distributions.py:1298: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestHistPlotUnivariate.test_weights_with_missing _______________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314e880>
missing_df =        x         y         z  a    b  ...    s    f  a_cat  s_cat s_str
0   12.0  0.449243  6.611886  b    p  ...  2.0....3      a      8     8
99  15.0  0.073484  1.036343  c    p  ...  2.0  NaN      c      2     2

[100 rows x 12 columns]

    def test_weights_with_missing(self, missing_df):
    
>       ax = histplot(missing_df, x="x", weights="s", bins=5)

seaborn/tests/test_distributions.py:1323: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestHistPlotUnivariate.test_discrete _____________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314ea30>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_discrete(self, long_df):
    
>       ax = histplot(long_df, x="s", discrete=True)

seaborn/tests/test_distributions.py:1331: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_discrete_categorical_default ___________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314ef40>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_discrete_categorical_default(self, long_df):
    
>       ax = histplot(long_df, x="a")

seaborn/tests/test_distributions.py:1343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_categorical_yaxis_inversion ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b30db3a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_categorical_yaxis_inversion(self, long_df):
    
>       ax = histplot(long_df, y="a")

seaborn/tests/test_distributions.py:1349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestHistPlotUnivariate.test_datetime_scale __________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b30db9a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    @pytest.mark.skipif(
        Version(np.__version__) < Version("1.17"),
        reason="Histogram over datetime64 requires numpy >= 1.17",
    )
    def test_datetime_scale(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
>       histplot(x=long_df["t"], fill=True, ax=ax1)

seaborn/tests/test_distributions.py:1365: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotUnivariate.test_kde_with_hue[count-layer] _____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314e400>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'count', multiple = 'layer'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotUnivariate.test_kde_with_hue[count-dodge] _____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314ea00>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'count', multiple = 'dodge'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_kde_with_hue[density-layer] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b314ebe0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'density', multiple = 'layer'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________ TestHistPlotUnivariate.test_kde_with_hue[density-dodge] ____________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b312ff70>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'density', multiple = 'dodge'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________ TestHistPlotUnivariate.test_kde_with_hue[probability-layer] __________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2d09fa0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'probability', multiple = 'layer'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________ TestHistPlotUnivariate.test_kde_with_hue[probability-dodge] __________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2d09ee0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'probability', multiple = 'dodge'

    @pytest.mark.parametrize("multiple", ["layer", "dodge"])
    @pytest.mark.parametrize("stat", ["count", "density", "probability"])
    def test_kde_with_hue(self, long_df, stat, multiple):
    
        n = 10
>       ax = histplot(
            long_df, x="x", hue="c", multiple=multiple,
            kde=True, stat=stat, element="bars",
            kde_kws={"cut": 10}, bins=n,
        )

seaborn/tests/test_distributions.py:1390: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestHistPlotUnivariate.test_kde_hue ______________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2d09970>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_kde_hue(self, long_df):
    
        n = 10
>       ax = histplot(data=long_df, x="x", hue="a", kde=True, bins=n)

seaborn/tests/test_distributions.py:1421: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestHistPlotUnivariate.test_kde_singular_data _________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2d09160>

    def test_kde_singular_data(self):
    
>       with pytest.warns(None) as record:

seaborn/tests/test_distributions.py:1444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = WarningsChecker(record=True), expected_warning = None, match_expr = None

    def __init__(
        self,
        expected_warning: Union[Type[Warning], Tuple[Type[Warning], ...]] = Warning,
        match_expr: Optional[Union[str, Pattern[str]]] = None,
        *,
        _ispytest: bool = False,
    ) -> None:
        check_ispytest(_ispytest)
        super().__init__(_ispytest=True)
    
        msg = "exceptions must be derived from Warning, not %s"
        if isinstance(expected_warning, tuple):
            for exc in expected_warning:
                if not issubclass(exc, Warning):
                    raise TypeError(msg % type(exc))
            expected_warning_tup = expected_warning
        elif isinstance(expected_warning, type) and issubclass(
            expected_warning, Warning
        ):
            expected_warning_tup = (expected_warning,)
        else:
>           raise TypeError(msg % type(expected_warning))
E           TypeError: exceptions must be derived from Warning, not <class 'NoneType'>

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/_pytest/recwarn.py:281: TypeError
_________________ TestHistPlotUnivariate.test_element_default __________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2ce5e50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_element_default(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
>       histplot(long_df, x="x", ax=ax1)

seaborn/tests/test_distributions.py:1457: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestHistPlotUnivariate.test_weighted_histogram ________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b233f430>

    def test_weighted_histogram(self):
    
>       ax = histplot(x=[0, 1, 2], weights=[1, 2, 3], discrete=True)

seaborn/tests/test_distributions.py:1574: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestHistPlotUnivariate.test_weights_with_auto_bins ______________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2337b50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_weights_with_auto_bins(self, long_df):
    
        with pytest.warns(UserWarning):
>           ax = histplot(long_df, x="x", weights="f")

seaborn/tests/test_distributions.py:1582: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestHistPlotUnivariate.test_shrink ______________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2ce55b0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_shrink(self, long_df):
    
        f, (ax1, ax2) = plt.subplots(2)
    
        bw = 2
        shrink = .4
    
>       histplot(long_df, x="x", binwidth=bw, ax=ax1)

seaborn/tests/test_distributions.py:1592: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestHistPlotUnivariate.test_log_scale_explicit ________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2ce5970>
rng = RandomState(MT19937) at 0x7F60B2AD7940

    def test_log_scale_explicit(self, rng):
    
        x = rng.lognormal(0, 2, 1000)
>       ax = histplot(x, log_scale=True, binwidth=1)

seaborn/tests/test_distributions.py:1606: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________ TestHistPlotUnivariate.test_log_scale_implicit ________________

self = <seaborn.tests.test_distributions.TestHistPlotUnivariate object at 0x7f60b2d09610>
rng = RandomState(MT19937) at 0x7F60B2AD7E40

    def test_log_scale_implicit(self, rng):
    
        x = rng.lognormal(0, 2, 1000)
    
        f, ax = plt.subplots()
        ax.set_xscale("log")
>       histplot(x, binwidth=1, ax=ax)

seaborn/tests/test_distributions.py:1618: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestHistPlotBivariate.test_mesh ________________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b22ac6d0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh(self, long_df):
    
        hist = Histogram()
        counts, (x_edges, y_edges) = hist(long_df["x"], long_df["y"])
    
>       ax = histplot(long_df, x="x", y="y")

seaborn/tests/test_distributions.py:1691: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestHistPlotBivariate.test_mesh_with_hue ___________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b22ac820>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_with_hue(self, long_df):
    
>       ax = histplot(long_df, x="x", y="y", hue="c")

seaborn/tests/test_distributions.py:1706: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________ TestHistPlotBivariate.test_mesh_with_hue_unique_bins _____________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229f820>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_with_hue_unique_bins(self, long_df):
    
>       ax = histplot(long_df, x="x", y="y", hue="c", common_bins=False)

seaborn/tests/test_distributions.py:1729: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________ TestHistPlotBivariate.test_mesh_with_col_unique_bins _____________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229fee0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_with_col_unique_bins(self, long_df):
    
>       g = displot(long_df, x="x", y="y", col="c", common_bins=False)

seaborn/tests/test_distributions.py:1751: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2279: in displot
    p.plot_bivariate_histogram(**hist_kws)
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________________ TestHistPlotBivariate.test_mesh_log_scale ___________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229f7f0>
rng = RandomState(MT19937) at 0x7F60B2AD7D40

    def test_mesh_log_scale(self, rng):
    
        x, y = rng.lognormal(0, 1, (2, 1000))
        hist = Histogram()
        counts, (x_edges, y_edges) = hist(np.log10(x), np.log10(y))
    
>       ax = histplot(x=x, y=y, log_scale=True)

seaborn/tests/test_distributions.py:1777: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestHistPlotBivariate.test_mesh_thresh ____________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229f520>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_thresh(self, long_df):
    
        hist = Histogram()
        counts, (x_edges, y_edges) = hist(long_df["x"], long_df["y"])
    
        thresh = 5
>       ax = histplot(long_df, x="x", y="y", thresh=thresh)

seaborn/tests/test_distributions.py:1795: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotBivariate.test_mesh_sticky_edges _________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229f040>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_sticky_edges(self, long_df):
    
>       ax = histplot(long_df, x="x", y="y", thresh=None)

seaborn/tests/test_distributions.py:1804: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotBivariate.test_mesh_common_norm __________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229fa00>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_common_norm(self, long_df):
    
        stat = "density"
>       ax = histplot(
            long_df, x="x", y="y", hue="c", common_norm=True, stat=stat,
        )

seaborn/tests/test_distributions.py:1818: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotBivariate.test_mesh_unique_norm __________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b2300310>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_unique_norm(self, long_df):
    
        stat = "density"
>       ax = histplot(
            long_df, x="x", y="y", hue="c", common_norm=False, stat=stat,
        )

seaborn/tests/test_distributions.py:1838: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestHistPlotBivariate.test_mesh_normalization[probability] __________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b229f760>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'probability'

    @pytest.mark.parametrize("stat", ["probability", "proportion", "percent"])
    def test_mesh_normalization(self, long_df, stat):
    
>       ax = histplot(
            long_df, x="x", y="y", stat=stat,
        )

seaborn/tests/test_distributions.py:1858: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
__________ TestHistPlotBivariate.test_mesh_normalization[proportion] ___________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b22aca60>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'proportion'

    @pytest.mark.parametrize("stat", ["probability", "proportion", "percent"])
    def test_mesh_normalization(self, long_df, stat):
    
>       ax = histplot(
            long_df, x="x", y="y", stat=stat,
        )

seaborn/tests/test_distributions.py:1858: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________ TestHistPlotBivariate.test_mesh_normalization[percent] ____________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b22ac700>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
stat = 'percent'

    @pytest.mark.parametrize("stat", ["probability", "proportion", "percent"])
    def test_mesh_normalization(self, long_df, stat):
    
>       ax = histplot(
            long_df, x="x", y="y", stat=stat,
        )

seaborn/tests/test_distributions.py:1858: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestHistPlotBivariate.test_mesh_colors ____________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b2340910>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_mesh_colors(self, long_df):
    
        color = "r"
        f, ax = plt.subplots()
>       histplot(
            long_df, x="x", y="y", color=color,
        )

seaborn/tests/test_distributions.py:1870: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestHistPlotBivariate.test_color_limits ____________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b2ce6f40>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_color_limits(self, long_df):
    
        f, (ax1, ax2, ax3) = plt.subplots(3)
        kws = dict(data=long_df, x="x", y="y")
        hist = Histogram()
        counts, _ = hist(long_df["x"], long_df["y"])
    
>       histplot(**kws, ax=ax1)

seaborn/tests/test_distributions.py:1897: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestHistPlotBivariate.test_hue_color_limits __________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b2300850>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue_color_limits(self, long_df):
    
        _, (ax1, ax2, ax3, ax4) = plt.subplots(4)
        kws = dict(data=long_df, x="x", y="y", hue="c", bins=4)
    
        hist = Histogram(bins=kws["bins"])
        hist.define_bin_params(long_df["x"], long_df["y"])
        full_counts, _ = hist(long_df["x"], long_df["y"])
    
        sub_counts = []
        for _, sub_df in long_df.groupby(kws["hue"]):
            c, _ = hist(sub_df["x"], sub_df["y"])
            sub_counts.append(c)
    
        pmax = .8
        pthresh = .05
        f = _DistributionPlotter()._quantile_to_level
    
>       histplot(**kws, common_norm=True, ax=ax1)

seaborn/tests/test_distributions.py:1936: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestHistPlotBivariate.test_colorbar ______________________

self = <seaborn.tests.test_distributions.TestHistPlotBivariate object at 0x7f60b2300fd0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_colorbar(self, long_df):
    
        f, ax = plt.subplots()
>       histplot(long_df, x="x", y="y", cbar=True, ax=ax)

seaborn/tests/test_distributions.py:1963: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestECDFPlotUnivariate.test_long_vectors[x] __________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b2300580>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'x'

    @pytest.mark.parametrize("variable", ["x", "y"])
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           ecdfplot(data=long_df, ax=ax, **{variable: vector})

seaborn/tests/test_distributions.py:1983: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________ TestECDFPlotUnivariate.test_long_vectors[y] __________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b2300070>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
variable = 'y'

    @pytest.mark.parametrize("variable", ["x", "y"])
    def test_long_vectors(self, long_df, variable):
    
        vector = long_df[variable]
        vectors = [
            variable, vector, np.asarray(vector), vector.tolist(),
        ]
    
        f, ax = plt.subplots()
        for vector in vectors:
>           ecdfplot(data=long_df, ax=ax, **{variable: vector})

seaborn/tests/test_distributions.py:1983: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestECDFPlotUnivariate.test_hue ________________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b22e9520>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_hue(self, long_df):
    
>       ax = ecdfplot(long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:1995: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________ TestECDFPlotUnivariate.test_line_kwargs ____________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b22e9af0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_line_kwargs(self, long_df):
    
        color = "r"
        ls = "--"
        lw = 3
>       ax = ecdfplot(long_df, x="x", color=color, ls=ls, lw=lw)

seaborn/tests/test_distributions.py:2005: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestECDFPlotUnivariate.test_weights ______________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b23bb220>

    def test_weights(self):
    
>       ax = ecdfplot(x=[1, 2, 3], weights=[1, 1, 2])

seaborn/tests/test_distributions.py:2058: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestECDFPlotUnivariate.test_log_scale _____________________

self = <seaborn.tests.test_distributions.TestECDFPlotUnivariate object at 0x7f60b23008b0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_log_scale(self, long_df):
    
        ax1, ax2 = plt.figure().subplots(2)
    
>       ecdfplot(data=long_df, x="z", ax=ax1)

seaborn/tests/test_distributions.py:2071: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs0] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b23bbfa0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs1] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b23bb880>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs2] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a220>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 't'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs3] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a070>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'a'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs4] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320aa60>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'log_scale': True, 'x': 'z'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs5] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320adf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'binwidth': 4, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs6] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a790>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'bins': 5, 'weights': 'f', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs7] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a6a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'binwidth': 4, 'color': 'green', 'linewidth': 2, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs8] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a4c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'fill': False, 'hue': 'a', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_histplot[kwargs9] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a580>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'fill': False, 'hue': 'a', 'x': 'y'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs10] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a9a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'multiple': 'stack', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs11] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320ad00>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'element': 'step', 'hue': 'a', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs12] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a7f0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'palette': 'muted', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs13] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320a2e0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'kde': True, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs14] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320ab50>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'common_norm': False, 'hue': 'a', 'stat': 'density', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________ TestDisPlot.test_versus_single_histplot[kwargs15] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320aaf0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x', 'y': 'y'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="a"),
            dict(x="z", log_scale=True),
            dict(x="x", binwidth=4),
            dict(x="x", weights="f", bins=5),
            dict(x="x", color="green", linewidth=2, binwidth=4),
            dict(x="x", hue="a", fill=False),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", element="step"),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", hue="a", kde=True),
            dict(x="x", hue="a", stat="density", common_norm=False),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_histplot(self, long_df, kwargs):
    
>       ax = histplot(long_df, **kwargs)

seaborn/tests/test_distributions.py:2106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs0] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b320afd0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs1] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475640>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs2] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475a60>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 't'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs3] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b34756a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'log_scale': True, 'x': 'z'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs4] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475430>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'bw_adjust': 0.5, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs5] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b34752b0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'weights': 'f', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs6] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475370>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'color': 'green', 'linewidth': 2, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs7] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475160>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'multiple': 'stack', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:296: in _compute_univariate_density
    all_observations = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs8] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b34750a0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'fill': True, 'hue': 'a', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs9] ________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475190>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'fill': False, 'hue': 'a', 'x': 'y'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs10] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475bb0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'palette': 'muted', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_kdeplot[kwargs11] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b2d09130>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x', 'y': 'y'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", bw_adjust=.5),
            dict(x="x", weights="f"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", multiple="stack"),
            dict(x="x", hue="a", fill=True),
            dict(x="y", hue="a", fill=False),
            dict(x="x", hue="a", palette="muted"),
            dict(x="x", y="y"),
        ],
    )
    def test_versus_single_kdeplot(self, long_df, kwargs):
    
        if "weights" in kwargs and Version(scipy.__version__) < Version("1.2"):
            pytest.skip("Weights require scipy >= 1.2")
    
>       ax = kdeplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1783: in kdeplot
    p.plot_bivariate_density(
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs0] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475f40>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs1] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3475f70>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs2] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6280>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 't'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs3] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6430>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'log_scale': True, 'x': 'z'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs4] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6bb0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'weights': 'f', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs5] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b67c0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'y': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs6] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6190>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'color': 'green', 'linewidth': 2, 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs7] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6b20>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'complementary': True, 'hue': 'a', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs8] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6ac0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'stat': 'count', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________ TestDisPlot.test_versus_single_ecdfplot[kwargs9] _______________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6a90>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'palette': 'muted', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(),
            dict(x="x"),
            dict(x="t"),
            dict(x="z", log_scale=True),
            dict(x="x", weights="f"),
            dict(y="x"),
            dict(x="x", color="green", linewidth=2),
            dict(x="x", hue="a", complementary=True),
            dict(x="x", hue="a", stat="count"),
            dict(x="x", hue="a", palette="muted"),
        ],
    )
    def test_versus_single_ecdfplot(self, long_df, kwargs):
    
>       ax = ecdfplot(data=long_df, **kwargs)

seaborn/tests/test_distributions.py:2167: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1997: in ecdfplot
    p.plot_univariate_ecdf(
seaborn/distributions.py:1256: in plot_univariate_ecdf
    for sub_vars, sub_data in self.iter_data(
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestDisPlot.test_with_rug[kwargs0] ______________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6580>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(x="x"),
            dict(x="x", y="y"),
            dict(x="x", hue="a"),
        ]
    )
    def test_with_rug(self, long_df, kwargs):
    
        ax = plt.figure().subplots()
>       histplot(data=long_df, **kwargs, ax=ax)

seaborn/tests/test_distributions.py:2189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestDisPlot.test_with_rug[kwargs1] ______________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6340>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'x': 'x', 'y': 'y'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(x="x"),
            dict(x="x", y="y"),
            dict(x="x", hue="a"),
        ]
    )
    def test_with_rug(self, long_df, kwargs):
    
        ax = plt.figure().subplots()
>       histplot(data=long_df, **kwargs, ax=ax)

seaborn/tests/test_distributions.py:2189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1480: in histplot
    p.plot_bivariate_histogram(
seaborn/distributions.py:764: in plot_bivariate_histogram
    for _, sub_data in self.iter_data(from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
______________________ TestDisPlot.test_with_rug[kwargs2] ______________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b22b6df0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
kwargs = {'hue': 'a', 'x': 'x'}

    @pytest.mark.parametrize(
        "kwargs", [
            dict(x="x"),
            dict(x="x", y="y"),
            dict(x="x", hue="a"),
        ]
    )
    def test_with_rug(self, long_df, kwargs):
    
        ax = plt.figure().subplots()
>       histplot(data=long_df, **kwargs, ax=ax)

seaborn/tests/test_distributions.py:2189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestDisPlot.test_facets[col] _________________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560d90>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
facet_var = 'col'

    @pytest.mark.parametrize(
        "facet_var", ["col", "row"],
    )
    def test_facets(self, long_df, facet_var):
    
        kwargs = {facet_var: "a"}
>       ax = kdeplot(data=long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:2207: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestDisPlot.test_facets[row] _________________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560400>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
facet_var = 'row'

    @pytest.mark.parametrize(
        "facet_var", ["col", "row"],
    )
    def test_facets(self, long_df, facet_var):
    
        kwargs = {facet_var: "a"}
>       ax = kdeplot(data=long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:2207: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/_decorators.py:46: in inner_f
    return f(**kwargs)
seaborn/distributions.py:1770: in kdeplot
    p.plot_univariate_density(
seaborn/distributions.py:928: in plot_univariate_density
    densities = self._compute_univariate_density(
seaborn/distributions.py:303: in _compute_univariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestDisPlot.test_facet_multiple[dodge] ____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560280>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'dodge'

    @pytest.mark.parametrize("multiple", ["dodge", "stack", "fill"])
    def test_facet_multiple(self, long_df, multiple):
    
        bins = np.linspace(0, 20, 5)
>       ax = histplot(
            data=long_df[long_df["c"] == 0],
            x="x", hue="a", hue_order=["a", "b", "c"],
            multiple=multiple, bins=bins,
        )

seaborn/tests/test_distributions.py:2224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestDisPlot.test_facet_multiple[stack] ____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560910>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'stack'

    @pytest.mark.parametrize("multiple", ["dodge", "stack", "fill"])
    def test_facet_multiple(self, long_df, multiple):
    
        bins = np.linspace(0, 20, 5)
>       ax = histplot(
            data=long_df[long_df["c"] == 0],
            x="x", hue="a", hue_order=["a", "b", "c"],
            multiple=multiple, bins=bins,
        )

seaborn/tests/test_distributions.py:2224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
____________________ TestDisPlot.test_facet_multiple[fill] _____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560940>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
multiple = 'fill'

    @pytest.mark.parametrize("multiple", ["dodge", "stack", "fill"])
    def test_facet_multiple(self, long_df, multiple):
    
        bins = np.linspace(0, 20, 5)
>       ax = histplot(
            data=long_df[long_df["c"] == 0],
            x="x", hue="a", hue_order=["a", "b", "c"],
            multiple=multiple, bins=bins,
        )

seaborn/tests/test_distributions.py:2224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:1462: in histplot
    p.plot_univariate_histogram(
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_________________________ TestDisPlot.test_ax_warning __________________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560700>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_ax_warning(self, long_df):
    
        ax = plt.figure().subplots()
        with pytest.warns(UserWarning, match="`displot` is a figure-level"):
>           displot(long_df, x="x", ax=ax)

seaborn/tests/test_distributions.py:2241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2274: in displot
    p.plot_univariate_histogram(**hist_kws)
seaborn/distributions.py:428: in plot_univariate_histogram
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestDisPlot.test_array_faceting[col] _____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b2ce9910>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
key = 'col'

    @pytest.mark.parametrize("key", ["col", "row"])
    def test_array_faceting(self, long_df, key):
    
        a = np.asarray(long_df["a"])  # .to_numpy on pandas 0.24
        vals = categorical_order(a)
>       g = displot(long_df, x="x", **{key: a})

seaborn/tests/test_distributions.py:2248: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2274: in displot
    p.plot_univariate_histogram(**hist_kws)
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestDisPlot.test_array_faceting[row] _____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b2ce9c10>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]
key = 'row'

    @pytest.mark.parametrize("key", ["col", "row"])
    def test_array_faceting(self, long_df, key):
    
        a = np.asarray(long_df["a"])  # .to_numpy on pandas 0.24
        vals = categorical_order(a)
>       g = displot(long_df, x="x", **{key: a})

seaborn/tests/test_distributions.py:2248: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2274: in displot
    p.plot_univariate_histogram(**hist_kws)
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
___________________________ TestDisPlot.test_legend ____________________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b3560ac0>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_legend(self, long_df):
    
>       g = displot(long_df, x="x", hue="a")

seaborn/tests/test_distributions.py:2255: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2274: in displot
    p.plot_univariate_histogram(**hist_kws)
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestDisPlot.test_bivariate_kde_norm ______________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b2ce9400>
rng = RandomState(MT19937) at 0x7F60A685D140

    def test_bivariate_kde_norm(self, rng):
    
        x, y = rng.normal(0, 1, (2, 100))
        z = [0] * 80 + [1] * 20
    
>       g = displot(x=x, y=y, col=z, kind="kde", levels=10)

seaborn/tests/test_distributions.py:2273: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2304: in displot
    p.plot_bivariate_density(**kde_kws)
seaborn/distributions.py:1086: in plot_bivariate_density
    for sub_vars, sub_data in self.iter_data("hue", from_comp_data=True):
seaborn/_core.py:983: in iter_data
    data = self.comp_data
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_____________________ TestDisPlot.test_bivariate_hist_norm _____________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b2ce91f0>
rng = RandomState(MT19937) at 0x7F60B2AD7E40

    def test_bivariate_hist_norm(self, rng):
    
        x, y = rng.normal(0, 1, (2, 100))
        z = [0] * 80 + [1] * 20
    
>       g = displot(x=x, y=y, col=z, kind="hist")

seaborn/tests/test_distributions.py:2288: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2279: in displot
    p.plot_bivariate_histogram(**hist_kws)
seaborn/distributions.py:751: in plot_bivariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
_______________________ TestDisPlot.test_facetgrid_data ________________________

self = <seaborn.tests.test_distributions.TestDisPlot object at 0x7f60b30ed220>
long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_facetgrid_data(self, long_df):
    
>       g = displot(
            data=long_df.to_dict(orient="list"),
            x="z",
            hue=long_df["a"].rename("hue_var"),
            col=np.asarray(long_df["c"]),
        )

seaborn/tests/test_distributions.py:2300: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/distributions.py:2274: in displot
    p.plot_univariate_histogram(**hist_kws)
seaborn/distributions.py:400: in plot_univariate_histogram
    all_data = self.comp_data.dropna()
seaborn/_core.py:1054: in comp_data
    with pd.option_context('mode.use_inf_as_null', True):
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in __enter__
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:478: in <listcomp>
    self.undo = [(pat, _get_option(pat)) for pat, val in self.ops]
../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:146: in _get_option
    key = _get_single_key(pat, silent)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pat = 'mode.use_inf_as_null', silent = False

    def _get_single_key(pat: str, silent: bool) -> str:
        keys = _select_options(pat)
        if len(keys) == 0:
            if not silent:
                _warn_if_deprecated(pat)
>           raise OptionError(f"No such keys(s): {repr(pat)}")
E           pandas._config.config.OptionError: "No such keys(s): 'mode.use_inf_as_null'"

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/_config/config.py:132: OptionError
________________________ test_locator_to_legend_entries ________________________

    def test_locator_to_legend_entries():
    
        locator = mpl.ticker.MaxNLocator(nbins=3)
        limits = (0.09, 0.4)
        levels, str_levels = utils.locator_to_legend_entries(
            locator, limits, float
        )
        assert str_levels == ["0.15", "0.30"]
    
        limits = (0.8, 0.9)
        levels, str_levels = utils.locator_to_legend_entries(
            locator, limits, float
        )
        assert str_levels == ["0.80", "0.84", "0.88"]
    
        limits = (1, 6)
        levels, str_levels = utils.locator_to_legend_entries(locator, limits, int)
        assert str_levels == ["2", "4", "6"]
    
        locator = mpl.ticker.LogLocator(numticks=5)
        limits = (5, 1425)
        levels, str_levels = utils.locator_to_legend_entries(locator, limits, int)
        if Version(mpl.__version__) >= Version("3.1"):
            assert str_levels == ['10', '100', '1000']
    
        limits = (0.00003, 0.02)
        levels, str_levels = utils.locator_to_legend_entries(
            locator, limits, float
        )
        if Version(mpl.__version__) >= Version("3.1"):
>           assert str_levels == ['1e-04', '1e-03', '1e-02']
E           AssertionError: assert ['1e−04', '1e−03', '1e−02'] == ['1e-04', '1e-03', '1e-02']
E             
E             At index 0 diff: '1e−04' != '1e-04'
E             Use -v to get more diff

seaborn/tests/test_utils.py:383: AssertionError
_________________________ test_move_legend_grid_object _________________________

long_df =      x         y         z  a  b  c          t  s    f a_cat s_cat s_str
0   12  0.449243  6.611886  b  p  0 2004-01-0...0.3     a     8     8
99  15  0.073484  1.036343  c  p  0 2005-01-01  2  0.3     c     2     2

[100 rows x 12 columns]

    def test_move_legend_grid_object(long_df):
    
        from seaborn.axisgrid import FacetGrid
    
        hue_var = "a"
        g = FacetGrid(long_df, hue=hue_var)
>       g.map(plt.plot, "x", "y")

seaborn/tests/test_utils.py:441: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
seaborn/axisgrid.py:703: in map
    plot_args = [v for k, v in plot_data.iteritems()]
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self =      x         y
0   12  0.449243
1   15  0.434942
4   10 -1.253690
13   0 -0.588094
14  13 -1.665427
15   2  1.670946...
73   5 -0.236192
75   5  0.923673
85  17 -1.047659
87   5  0.180705
88  11 -0.560961
92  12  0.512806
93  12  0.101402
name = 'iteritems'

    @final
    def __getattr__(self, name: str):
        """
        After regular attribute access, try looking up the name
        This allows simpler access to columns for interactive use.
        """
        # Note: obj.x will always call obj.__getattribute__('x') prior to
        # calling obj.__getattr__('x').
        if (
            name not in self._internal_names_set
            and name not in self._metadata
            and name not in self._accessors
            and self._info_axis._can_hold_identifiers_and_holds_name(name)
        ):
            return self[name]
>       return object.__getattribute__(self, name)
E       AttributeError: 'DataFrame' object has no attribute 'iteritems'

../../tmp7_slr5hs/miniconda3/lib/python3.9/site-packages/pandas/core/generic.py:6202: AttributeError
=============================== warnings summary ===============================
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
seaborn/cm.py:1582
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/cm.py:1582: MatplotlibDeprecationWarning: The register_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps.register(name)`` instead.
    mpl_cm.register_cmap(_name, _cmap)

seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
seaborn/cm.py:1583
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/cm.py:1583: MatplotlibDeprecationWarning: The register_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps.register(name)`` instead.
    mpl_cm.register_cmap(_name + "_r", _cmap_r)

seaborn/tests/test_categorical.py: 881 warnings
seaborn/tests/test_distributions.py: 516 warnings
seaborn/tests/test_regression.py: 29 warnings
seaborn/tests/test_utils.py: 2 warnings
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/_core.py:1225: FutureWarning: is_categorical_dtype is deprecated and will be removed in a future version. Use isinstance(dtype, CategoricalDtype) instead
    if pd.api.types.is_categorical_dtype(vector):

seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_longform_groupby
seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_longform_groupby
seaborn/tests/test_categorical.py::TestStripPlotter::test_stripplot_horiztonal
seaborn/tests/test_categorical.py::TestStripPlotter::test_dodge_nested_stripplot_horizontal
seaborn/tests/test_categorical.py::TestStripPlotter::test_dodge_nested_stripplot_horizontal
seaborn/tests/test_categorical.py::TestStripPlotter::test_nested_stripplot_horizontal
seaborn/tests/test_categorical.py::TestStripPlotter::test_nested_stripplot_horizontal
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/categorical.py:253: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.
    grouped_vals = vals.groupby(grouper)

seaborn/tests/test_categorical.py: 18 warnings
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/_core.py:1485: FutureWarning: unique with argument that is not not a Series, Index, ExtensionArray, or np.ndarray is deprecated and will raise in a future version.
    order = pd.unique(vector)

seaborn/tests/test_categorical.py::TestCategoricalScatterPlotter::test_scatterplot_legend
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/tests/test_categorical.py:1569: MatplotlibDeprecationWarning: The legendHandles attribute was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use legend_handles instead.
    for i, h in enumerate(leg.legendHandles):

seaborn/tests/test_categorical.py: 8 warnings
seaborn/tests/test_rcmod.py: 2 warnings
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/palettes.py:443: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap(obj)`` instead.
    cmap = mpl.cm.get_cmap(name)

seaborn/tests/test_categorical.py: 24 warnings
seaborn/tests/test_regression.py: 13 warnings
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/axisgrid.py:88: UserWarning: The figure layout has changed to tight
    self._figure.tight_layout(*args, **kwargs)

seaborn/tests/test_rcmod.py::TestAxesStyle::test_set_with_palette
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/rcmod.py:148: MatplotlibDeprecationWarning: MatplotlibDeprecationWarning was deprecated in Matplotlib 3.6 and will be removed two minor releases later. Use matplotlib.MatplotlibDeprecationWarning instead.
    warnings.simplefilter('ignore', mpl.cbook.MatplotlibDeprecationWarning)

seaborn/tests/test_utils.py::test_move_legend_matplotlib_objects
seaborn/tests/test_utils.py::test_move_legend_matplotlib_objects
seaborn/tests/test_utils.py::test_move_legend_matplotlib_objects
  /home/user/SWE-bench/research/run_evaluation_20240428_verify/testbed/gold/seaborn/0.11/tmptc2iq9k3/mwaskom__seaborn__0.11/seaborn/utils.py:387: MatplotlibDeprecationWarning: The legendHandles attribute was deprecated in Matplotlib 3.7 and will be removed two minor releases later. Use legend_handles instead.
    handles = old_legend.legendHandles

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED seaborn/tests/test_algorithms.py::test_bootstrap
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_length
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_range
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_multiarg
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_axis
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_seed
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_ols
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_units
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_arglength
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_string_func
PASSED seaborn/tests/test_algorithms.py::test_bootstrap_reproducibility
PASSED seaborn/tests/test_algorithms.py::test_seed_new
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_1d_input_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_2d_input_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_3d_input_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_list_of_array_input_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_wide_array_input_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_single_long_direct_inputs
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_single_long_indirect_inputs
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_longform_groupby
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_input_validation
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_hue_order
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_plot_units
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_default_palettes
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_default_palette_with_many_levels
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_specific_color
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_specific_palette
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_dict_as_palette
PASSED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_palette_desaturation
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_no_bootstrappig
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_single_layer_stats
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_single_layer_stats_with_units
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_single_layer_stats_with_missing_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_nested_stats
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_bootstrap_seed
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_nested_stats_with_units
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_nested_stats_with_missing_data
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_sd_error_bars
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_nested_sd_error_bars
PASSED seaborn/tests/test_categorical.py::TestCategoricalStatPlotter::test_draw_cis
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_nested_width
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_hue_offsets
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_axes_data
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_box_colors
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_draw_missing_boxes
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_missing_data
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_unaligned_index
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_boxplots
PASSED seaborn/tests/test_categorical.py::TestBoxPlotter::test_axes_annotation
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_split_error
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_no_observations
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_single_observation
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_dwidth
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_scale_area
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_scale_width
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_scale_count
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_bad_scale
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_kde_fit
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_to_density
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_single_observations
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_box_lines
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_quartiles
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_points
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_sticks
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_validate_inner
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_violinplots
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_violinplots_no_observations
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_draw_violinplots_single_observations
PASSED seaborn/tests/test_categorical.py::TestViolinPlotter::test_violinplots
PASSED seaborn/tests/test_categorical.py::TestCategoricalScatterPlotter::test_group_point_colors
PASSED seaborn/tests/test_categorical.py::TestCategoricalScatterPlotter::test_hue_point_colors
PASSED seaborn/tests/test_categorical.py::TestCategoricalScatterPlotter::test_scatterplot_legend
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_stripplot_vertical
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_stripplot_horiztonal
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_stripplot_jitter
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_dodge_nested_stripplot_vertical
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_dodge_nested_stripplot_horizontal
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_nested_stripplot_vertical
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_nested_stripplot_horizontal
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_three_strip_points
PASSED seaborn/tests/test_categorical.py::TestStripPlotter::test_unaligned_index
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_could_overlap
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_position_candidates
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_find_first_non_overlapping_candidate
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_beeswarm
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_add_gutters
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_swarmplot_vertical
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_swarmplot_horizontal
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_dodge_nested_swarmplot_vertical
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_dodge_nested_swarmplot_horizontal
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_nested_swarmplot_vertical
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_nested_swarmplot_horizontal
PASSED seaborn/tests/test_categorical.py::TestSwarmPlotter::test_unaligned_index
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_nested_width
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_draw_vertical_bars
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_draw_horizontal_bars
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_draw_nested_vertical_bars
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_draw_nested_horizontal_bars
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_draw_missing_bars
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_unaligned_index
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_barplot_colors
PASSED seaborn/tests/test_categorical.py::TestBarPlotter::test_simple_barplots
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_different_defualt_colors
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_hue_offsets
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_draw_vertical_points
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_draw_horizontal_points
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_draw_vertical_nested_points
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_draw_horizontal_nested_points
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_draw_missing_points
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_unaligned_index
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_pointplot_colors
PASSED seaborn/tests/test_categorical.py::TestPointPlotter::test_simple_pointplots
PASSED seaborn/tests/test_categorical.py::TestCountPlot::test_plot_elements
PASSED seaborn/tests/test_categorical.py::TestCountPlot::test_input_error
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_facet_organization
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_plot_elements
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_bad_plot_kind_error
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_count_x_and_y
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_plot_colors
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_ax_kwarg_removal
PASSED seaborn/tests/test_categorical.py::TestCatPlot::test_factorplot
PASSED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_invalid_depths
PASSED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_scales
PASSED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_hue_offsets
PASSED seaborn/tests/test_distributions.py::TestRugPlot::test_empty_data
PASSED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_empty_data
PASSED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_multiple_argument_check
PASSED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_input_checking
PASSED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_quantile_to_level
PASSED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_input_checking
PASSED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_empty_data
PASSED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_discrete_requires_bars
PASSED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_bivariate_error
PASSED seaborn/tests/test_distributions.py::TestDisPlot::test_empty
PASSED seaborn/tests/test_distributions.py::TestDisPlot::test_bivariate_ecdf_error
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_default_return
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_key_usage
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_bad_style
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_rc_override
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_set_style
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_style_context_manager
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_style_context_independence
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_set_rc
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_set_with_palette
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_reset_defaults
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_reset_orig
PASSED seaborn/tests/test_rcmod.py::TestAxesStyle::test_set_is_alias
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_default_return
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_key_usage
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_bad_context
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_font_scale
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_rc_override
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_set_context
PASSED seaborn/tests/test_rcmod.py::TestPlottingContext::test_context_context_manager
PASSED seaborn/tests/test_rcmod.py::TestPalette::test_set_palette
PASSED seaborn/tests/test_rcmod.py::TestFonts::test_set_serif_font
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_frame
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_series
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_array
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_lists
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_mix
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_establish_variables_from_bad
PASSED seaborn/tests/test_regression.py::TestLinearPlotter::test_dropna
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_variables_from_frame
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_variables_from_series
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_variables_from_mix
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_variables_must_be_1d
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_dropna
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_singleton[x0-y0]
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_singleton[x1-y1]
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_singleton[x2-y2]
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_ci
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_regress_logx
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_regress_bootstrap_seed
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_numeric_bins
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_provided_bins
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_bin_results
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_scatter_data
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_estimate_data
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_estimate_cis
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_estimate_units
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_partial
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_regression_options
PASSED seaborn/tests/test_regression.py::TestRegressionPlotter::test_regression_limits
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_regplot_basic
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_regplot_selective
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_regplot_scatter_kws_alpha
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_regplot_binned
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_no_data
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_basic
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_hue
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_markers
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_marker_linewidths
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_facets
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_hue_col_nolegend
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_scatter_kws
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_facet_truncate[True]
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_facet_truncate[False]
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_sharey
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_lmplot_facet_kws
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_residplot
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_three_point_colors
PASSED seaborn/tests/test_regression.py::TestRegressionPlots::test_regplot_xlim
PASSED seaborn/tests/test_utils.py::test_pmf_hist_basics
PASSED seaborn/tests/test_utils.py::test_ci_to_errsize
PASSED seaborn/tests/test_utils.py::test_desaturate
PASSED seaborn/tests/test_utils.py::test_desaturation_prop
PASSED seaborn/tests/test_utils.py::test_saturate
PASSED seaborn/tests/test_utils.py::test_sig_stars[0.0001-***]
PASSED seaborn/tests/test_utils.py::test_sig_stars[0.001-**]
PASSED seaborn/tests/test_utils.py::test_sig_stars[0.01-*]
PASSED seaborn/tests/test_utils.py::test_sig_stars[0.09-.]
PASSED seaborn/tests/test_utils.py::test_sig_stars[1-]
PASSED seaborn/tests/test_utils.py::test_iqr
PASSED seaborn/tests/test_utils.py::test_to_utf8[a-a0]
PASSED seaborn/tests/test_utils.py::test_to_utf8[abc-abc0]
PASSED seaborn/tests/test_utils.py::test_to_utf8[a-a1]
PASSED seaborn/tests/test_utils.py::test_to_utf8[abc-abc1]
PASSED seaborn/tests/test_utils.py::test_to_utf8[s4-abc]
PASSED seaborn/tests/test_utils.py::test_to_utf8[s5-]
PASSED seaborn/tests/test_utils.py::test_to_utf8[1-1]
PASSED seaborn/tests/test_utils.py::test_to_utf8[0-0]
PASSED seaborn/tests/test_utils.py::test_to_utf8[s8-[]]
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_specific_axes
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_with_offset
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_side_specific_offset
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_with_offset_specific_axes
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_spines
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_inverted
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_noticks
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_categorical
PASSED seaborn/tests/test_utils.py::TestSpineUtils::test_despine_moved_ticks
PASSED seaborn/tests/test_utils.py::test_ticklabels_overlap
PASSED seaborn/tests/test_utils.py::test_move_legend_matplotlib_objects
PASSED seaborn/tests/test_utils.py::test_move_legend_input_checks
PASSED seaborn/tests/test_utils.py::test_get_dataset_names
PASSED seaborn/tests/test_utils.py::test_load_datasets
PASSED seaborn/tests/test_utils.py::test_load_dataset_string_error
PASSED seaborn/tests/test_utils.py::test_load_dataset_passed_data_error
PASSED seaborn/tests/test_utils.py::test_load_cached_datasets
PASSED seaborn/tests/test_utils.py::test_relative_luminance
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler0-result0]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler1-result1]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler2-result2]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler3-result3]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler4-result4]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler5-result5]
PASSED seaborn/tests/test_utils.py::test_get_color_cycle[cycler6-result6]
PASSED seaborn/tests/test_utils.py::test_remove_na
PASSED seaborn/tests/test_utils.py::test_assign_default_kwargs
PASSED seaborn/tests/test_utils.py::test_draw_figure
SKIPPED [5] seaborn/tests/test_algorithms.py:180: Tests old numpy random functionality
SKIPPED [1] seaborn/tests/test_algorithms.py:197: Tests old numpy random functionality
SKIPPED [1] seaborn/tests/test_rcmod.py:246: Verdana font is not present
SKIPPED [1] seaborn/tests/test_rcmod.py:269: Verdana font is not present
SKIPPED [1] seaborn/tests/test_regression.py:188: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:202: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:230: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:247: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:388: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:397: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:407: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:420: no statsmodels
SKIPPED [1] seaborn/tests/test_regression.py:649: no statsmodels
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_wide_vs_long_data
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_a_deprecation - ...
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_axis_deprecation[x]
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_axis_deprecation[y]
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_vertical_deprecation
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_rug_data - Attri...
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_expand_margins
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_matplotlib_kwargs
ERROR seaborn/tests/test_distributions.py::TestRugPlot::test_axis_labels - At...
ERROR seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_wide_vs_long_data
ERROR seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_color_cycle_interaction
ERROR seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_line_kws
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_wide_vs_long_data
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_multiple_input_check
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_element_input_check
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_count_stat
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_density_stat
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat[probability]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat[proportion]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_percent_stat
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_unique_bins
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde[count]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde[density]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde[probability]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_default_cut
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_yaxis
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_line_kws
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_bars_no_fill
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_fill
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_poly_fill
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_poly_no_fill
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_no_fill
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_fill_xy
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_no_fill_xy
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_auto_linewidth[True]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_auto_linewidth[False]
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_bar_kwargs
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_fill_kwargs
ERROR seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_step_line_kwargs
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_drawstyle[x]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_drawstyle[y]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_limits[x-y]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_limits[y-x]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_limits_complementary[x-y]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_limits_complementary[y-x]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_count[x-y]
ERROR seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_proportion_count[y-x]
FAILED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_wide_df_data
FAILED seaborn/tests/test_categorical.py::TestCategoricalPlotter::test_order
FAILED seaborn/tests/test_categorical.py::TestCatPlot::test_share_xy - TypeEr...
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_finite
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_tukey
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_proportion
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[491-6]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[492-7]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[983-7]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[984-8]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[1966-8]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_ends_correct_trustworthy[1967-9]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_outliers - p...
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_showfliers
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[1]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[3]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[7]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[11]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[13]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_valid_depths[17]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_axes_data - ...
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_box_colors
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_draw_missing_boxes
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_unaligned_index
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_missing_data
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_boxenplots
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_axes_annotation
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_legend_titlesize[large]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_legend_titlesize[medium]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_legend_titlesize[small]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_legend_titlesize[22]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_legend_titlesize[12]
FAILED seaborn/tests/test_categorical.py::TestBoxenPlotter::test_Float64_input
FAILED seaborn/tests/test_distributions.py::TestDistPlot::test_hist_bins - pa...
FAILED seaborn/tests/test_distributions.py::TestDistPlot::test_elements - pan...
FAILED seaborn/tests/test_distributions.py::TestDistPlot::test_distplot_with_nans
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_long_data[x] - ...
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_long_data[y] - ...
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_bivariate_data
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_flat_vector - p...
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_datetime_data
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_rug_colors - pa...
FAILED seaborn/tests/test_distributions.py::TestRugPlot::test_log_scale - pan...
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_long_vectors[x]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_long_vectors[y]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_flat_vector
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_singular_data
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_variable_assignment
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_vertical_deprecation
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_bw_deprecation
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_kernel_deprecation
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_shade_deprecation
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_hue_colors[layer]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_hue_colors[stack]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_hue_colors[fill]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_hue_stacking
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_hue_filling
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_fill_default[stack]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_fill_default[fill]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_fill_nondefault[layer]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_fill_nondefault[stack]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_fill_nondefault[fill]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_color[True]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_color[False]
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_datetime_scale
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_cut
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_clip
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_line_is_density
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_cumulative
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_common_norm
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_common_grid
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_bw_method
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_bw_adjust
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_log_scale_implicit
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_log_scale_explicit
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_log_scale_with_hue
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_log_scale_normalization
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_weights
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_sticky_edges
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_axis_labels
FAILED seaborn/tests/test_distributions.py::TestKDEPlotUnivariate::test_legend
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_long_vectors
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_singular_data
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_fill_artists
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_common_norm
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_log_scale
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_bandwidth
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_weights
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_hue_ignores_cmap
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_contour_line_colors
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_contour_fill_colors
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_colorbar
FAILED seaborn/tests/test_distributions.py::TestKDEPlotBivariate::test_levels_and_thresh
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_long_vectors[x]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_long_vectors[y]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_flat_vector
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_variable_assignment
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[layer-bars]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[layer-step]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[layer-poly]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[dodge-bars]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[dodge-step]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[dodge-poly]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[stack-bars]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[stack-step]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[stack-poly]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[fill-bars]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[fill-step]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill_colors[fill-poly]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_stack
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_fill
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_dodge
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_hue_as_numpy_dodged
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_density_stat_common_norm
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_density_stat_unique_norm
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat_common_norm[probability]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat_common_norm[proportion]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat_unique_norm[probability]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_probability_stat_unique_norm[proportion]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_common_bins
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_weights_with_missing
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_discrete
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_discrete_categorical_default
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_categorical_yaxis_inversion
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_datetime_scale
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[count-layer]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[count-dodge]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[density-layer]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[density-dodge]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[probability-layer]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_with_hue[probability-dodge]
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_hue
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_kde_singular_data
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_element_default
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_weighted_histogram
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_weights_with_auto_bins
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_shrink
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_log_scale_explicit
FAILED seaborn/tests/test_distributions.py::TestHistPlotUnivariate::test_log_scale_implicit
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_with_hue
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_with_hue_unique_bins
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_with_col_unique_bins
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_log_scale
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_thresh
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_sticky_edges
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_common_norm
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_unique_norm
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_normalization[probability]
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_normalization[proportion]
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_normalization[percent]
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_mesh_colors
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_color_limits
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_hue_color_limits
FAILED seaborn/tests/test_distributions.py::TestHistPlotBivariate::test_colorbar
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_long_vectors[x]
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_long_vectors[y]
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_hue
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_line_kwargs
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_weights
FAILED seaborn/tests/test_distributions.py::TestECDFPlotUnivariate::test_log_scale
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs0]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs1]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs2]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs3]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs4]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs5]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs6]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs7]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs8]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs9]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs10]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs11]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs12]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs13]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs14]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_histplot[kwargs15]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs0]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs1]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs2]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs3]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs4]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs5]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs6]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs7]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs8]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs9]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs10]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_kdeplot[kwargs11]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs0]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs1]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs2]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs3]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs4]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs5]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs6]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs7]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs8]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_versus_single_ecdfplot[kwargs9]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_with_rug[kwargs0]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_with_rug[kwargs1]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_with_rug[kwargs2]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facets[col] - p...
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facets[row] - p...
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facet_multiple[dodge]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facet_multiple[stack]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facet_multiple[fill]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_ax_warning - pa...
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_array_faceting[col]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_array_faceting[row]
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_legend - pandas...
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_bivariate_kde_norm
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_bivariate_hist_norm
FAILED seaborn/tests/test_distributions.py::TestDisPlot::test_facetgrid_data
FAILED seaborn/tests/test_utils.py::test_locator_to_legend_entries - Assertio...
FAILED seaborn/tests/test_utils.py::test_move_legend_grid_object - AttributeE...
= 216 failed, 252 passed, 17 skipped, 1517 warnings, 47 errors in 175.33s (0:02:55) =
 
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Return Code: 1 

>>>>> Some Tests Failed
[mwaskom__seaborn__0.11] [mwaskom__seaborn-2766] Test script run successful 
